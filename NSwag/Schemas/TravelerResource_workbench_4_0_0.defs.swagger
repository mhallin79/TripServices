{
  "swagger": "2.0",
  "x-otm-resource": {
    "namespace": "http://www.travelport.com/model/reservation/workbench/v4",
    "localName": "TravelerResource"
  },
  "info": {
    "title": "TravelerResource",
    "x-otm-library": {
      "ResourceName": "TravelerResource",
      "LibraryName": "ReservationWorkbenchResource",
      "LibraryVersion": "4.0.0",
      "LibraryStatus": "FINAL",
      "SourceFile": "/ReservationWorkbenchResource_4_0_0.otm",
      "CompilerVersion": "4.0.beta13",
      "CompileDate": "2019-03-26T16:32:30.755-0600"
    },
    "description": "A person that is traveling",
    "version": "4.0.0"
  },
  "host": "127.0.0.1",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/reservationworkbench/{ReservationResource_Identifier}/travelers/{Identifier}": {
      "get": {
        "summary": "TravelerResource - Get",
        "operationId": "Get",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReservationResource_Identifier",
            "in": "path",
            "description": "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "name": "Identifier",
            "in": "path",
            "description": "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "$ref": "#/parameters/PseudoCityCode"
          },
          {
            "$ref": "#/parameters/CoreAffinity"
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TravelerResponse"
            },
            "x-xml-schema": {
              "$ref": "ReservationWorkbenchResource_4_0_0_Trim.xsd#/TravelerResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          }
        }
      },
      "put": {
        "summary": "TravelerResource - UpdateTraveler",
        "operationId": "UpdateTraveler",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReservationResource_Identifier",
            "in": "path",
            "description": "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "name": "Identifier",
            "in": "path",
            "description": "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "name": "TravelerID",
            "in": "body",
            "description": "A person that is traveling",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TravelerID"
            },
            "x-xml-schema": {
              "$ref": "Traveler_4_0_0_Trim.xsd#/Traveler"
            }
          },
          {
            "$ref": "#/parameters/PseudoCityCode"
          },
          {
            "$ref": "#/parameters/CoreAffinity"
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TravelerResponse"
            },
            "x-xml-schema": {
              "$ref": "ReservationWorkbenchResource_4_0_0_Trim.xsd#/TravelerResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TravelerResponse"
            },
            "x-xml-schema": {
              "$ref": "ReservationWorkbenchResource_4_0_0_Trim.xsd#/TravelerResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/reservationworkbench/{ReservationResource_Identifier}/travelers": {
      "get": {
        "summary": "TravelerResource - GetTravelers",
        "operationId": "GetTravelers",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReservationResource_Identifier",
            "in": "path",
            "description": "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "$ref": "#/parameters/PseudoCityCode"
          },
          {
            "$ref": "#/parameters/CoreAffinity"
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TravelerListResponse"
            },
            "x-xml-schema": {
              "$ref": "ReservationWorkbenchResource_4_0_0_Trim.xsd#/TravelerListResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          }
        }
      },
      "post": {
        "summary": "TravelerResource - AddTraveler",
        "operationId": "AddTraveler",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "ReservationResource_Identifier",
            "in": "path",
            "description": "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.",
            "required": true,
            "type": "string",
            "maxLength": 128
          },
          {
            "name": "TravelerID",
            "in": "body",
            "description": "A person that is traveling",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TravelerID"
            },
            "x-xml-schema": {
              "$ref": "Traveler_4_0_0_Trim.xsd#/Traveler"
            }
          },
          {
            "$ref": "#/parameters/PseudoCityCode"
          },
          {
            "$ref": "#/parameters/CoreAffinity"
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "x-xml-schema": {
              "$ref": "CommonF_4_0_0_Trim.xsd#/ErrorResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TravelerResponse"
            },
            "x-xml-schema": {
              "$ref": "ReservationWorkbenchResource_4_0_0_Trim.xsd#/TravelerResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TravelerResponse"
            },
            "x-xml-schema": {
              "$ref": "ReservationWorkbenchResource_4_0_0_Trim.xsd#/TravelerResponse"
            },
            "headers": {
              "E2ETrackingId": {
                "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "description": "Provides address information. Unformatted addresses are captured using the simple facet.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "BldgRoom": {
          "description": "Assigned Type: c-0400:AddressBldgRoom",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}BldgRoom"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "BldgRoom"
              }
            ]
          },
          "$ref": "#/definitions/AddressBldgRoom"
        },
        "Number": {
          "description": "Assigned Type: c-0400:AddressStreetNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StreetNmbr"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "StreetNmbr"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "10625"
              }
            ]
          },
          "$ref": "#/definitions/AddressStreetNumber"
        },
        "Street": {
          "description": "May contain the street number when the Street number element is missing.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to255"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "AddressLine"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "Travers Street"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "AddressLine": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 3
        },
        "City": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "CityName"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "Claremont"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "County": {
          "description": "County or Region Name (e.g., Fairfax).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "County"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "Los Angeles"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "StateProv": {
          "description": "Assigned Type: c-0400:StateProv",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvType"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "StateProv"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "CA"
              }
            ]
          },
          "$ref": "#/definitions/StateProv"
        },
        "Country": {
          "description": "Assigned Type: c-0400:Country",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CountryNameType"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "CountryName"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "US"
              }
            ]
          },
          "$ref": "#/definitions/Country"
        },
        "PostalCode": {
          "description": "Post Office Code number.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "PostalCode"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "91711-3323"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "role": {
          "$ref": "#/definitions/Enum_AddressRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "City"
      ],
      "discriminator": "@type"
    },
    "OrganizationAddress": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "description": "Provides address information. Unformatted addresses are captured using the simple facet.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "BldgRoom": {
          "description": "Assigned Type: c-0400:AddressBldgRoom",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}BldgRoom"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "BldgRoom"
              }
            ]
          },
          "$ref": "#/definitions/AddressBldgRoom"
        },
        "Number": {
          "description": "Assigned Type: c-0400:AddressStreetNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StreetNmbr"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "StreetNmbr"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "10625"
              }
            ]
          },
          "$ref": "#/definitions/AddressStreetNumber"
        },
        "Street": {
          "description": "May contain the street number when the Street number element is missing.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to255"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "AddressLine"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "Travers Street"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "AddressLine": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128
          },
          "maxItems": 3
        },
        "City": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to64"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "CityName"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "Claremont"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "County": {
          "description": "County or Region Name (e.g., Fairfax).",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "County"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "Los Angeles"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "StateProv": {
          "description": "Assigned Type: c-0400:StateProv",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvType"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "StateProv"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "CA"
              }
            ]
          },
          "$ref": "#/definitions/StateProv"
        },
        "Country": {
          "description": "Assigned Type: c-0400:Country",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}CountryNameType"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "CountryName"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "US"
              }
            ]
          },
          "$ref": "#/definitions/Country"
        },
        "PostalCode": {
          "description": "Post Office Code number.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "PostalCode"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "91711-3323"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "role": {
          "$ref": "#/definitions/Enum_AddressRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "City"
      ],
      "discriminator": "@type"
    },
    "AddressDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "description": "Provides address information. Unformatted addresses are captured using the simple facet.",
      "allOf": [
        {
          "$ref": "#/definitions/Address"
        },
        {
          "properties": {
            "type": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "Type"
                  }
                ],
                "examples": [
                  {
                    "context": "c",
                    "value": "CLT"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "use": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "AUT"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "Comment": {
              "description": "Assigned Type: c-0400:Comment",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "Remark"
                  }
                ],
                "examples": [
                  {
                    "context": "c",
                    "value": "This address should be used for all official correspondences."
                  }
                ]
              },
              "$ref": "#/definitions/Comment"
            },
            "Privacy": {
              "description": "Assigned Type: c-0400:Privacy",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: PrivacyGroup"
                  ]
                }
              },
              "$ref": "#/definitions/Privacy"
            },
            "Priority": {
              "description": "The priority ranking within the group",
              "type": "integer",
              "format": "int32",
              "maximum": 300,
              "exclusiveMaximum": false,
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "validInd": {
              "description": "If true, this is a valid and complete mailing address that has been verified through an address verification service or previously mailed materials have not been returned.",
              "type": "boolean"
            },
            "provisionedInd": {
              "description": "If true, this address came into the system through provisioning",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "OrganizationAddressDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Address"
      },
      "description": "Provides address information. Unformatted addresses are captured using the simple facet.",
      "allOf": [
        {
          "$ref": "#/definitions/OrganizationAddress"
        },
        {
          "properties": {
            "type": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "Type"
                  }
                ],
                "examples": [
                  {
                    "context": "c",
                    "value": "CLT"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "use": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "AUT"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "Comment": {
              "description": "Assigned Type: c-0400:Comment",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "Remark"
                  }
                ],
                "examples": [
                  {
                    "context": "c",
                    "value": "This address should be used for all official correspondences."
                  }
                ]
              },
              "$ref": "#/definitions/Comment"
            },
            "Privacy": {
              "description": "Assigned Type: c-0400:Privacy",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "AttributeGroup: PrivacyGroup"
                  ]
                }
              },
              "$ref": "#/definitions/Privacy"
            },
            "Priority": {
              "description": "The priority ranking within the group",
              "type": "integer",
              "format": "int32",
              "maximum": 300,
              "exclusiveMaximum": false,
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "validInd": {
              "description": "If true, this is a valid and complete mailing address that has been verified through an address verification service or previously mailed materials have not been returned.",
              "type": "boolean"
            },
            "provisionedInd": {
              "description": "If true, this address came into the system through provisioning",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Enum_AddressRole": {
      "properties": {
        "value": {
          "$ref": "#/definitions/Enum_AddressRole_Open"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Enum_AddressRole_Base": {
      "type": "string",
      "enum": [
        "Home",
        "Business",
        "Mailing",
        "Delivery",
        "Destination",
        "Other"
      ]
    },
    "Enum_AddressRole_Open": {
      "type": "string",
      "enum": [
        "Home",
        "Business",
        "Mailing",
        "Delivery",
        "Destination",
        "Other",
        "Other_"
      ]
    },
    "AddressBldgRoom": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AddressBldgRoom"
      },
      "description": "Address with building and room number",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "buldingInd": {
          "description": "When true, the information is a building name. When false, it is an apartment or room #",
          "type": "boolean"
        }
      }
    },
    "AddressStreetNumber": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AddressStreetNumber"
      },
      "description": "The street number alone is the numerical number that precedes the street name in the address",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Extension: StreetNmbrType"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "streetNmbrSuffix": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "StreetNmbrSuffix"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "B"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "streetDirection": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "StreetDirection"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "NNW"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "ruralRouteNmbr": {
          "description": "Assigned Type: c-0400:RuralRouteNumber",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to5"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "RuralRouteNmbr"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "88"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,5}"
        },
        "po_Box": {
          "description": "Assigned Type: c-0400:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "98567499"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "AirlineCodeWithContext": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AirlineCodeWithContext"
      },
      "description": "2 or 3 character airline code with attribute for source of code",
      "properties": {
        "value": {
          "type": "string",
          "pattern": "([a-zA-Z0-9]{2,3})"
        },
        "codeContext": {
          "description": "Assigned Type: c-0400:CodeContext",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "IATA"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "airlineName": {
          "description": "Assigned Type: c-0400:StringShort",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "Southwest Airlines"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "CodesWithContext": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CodesWithContext"
      },
      "description": "Any code used to specify an item, for example a type of traveler, service code, room amenity, etc.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          }
        },
        "codeContext": {
          "description": "Assigned Type: c-0400:CodeContext",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "Comments": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Comments"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "Comment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Country": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Country"
      },
      "description": "ISO 3166 code for a country with optional name",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}ISO3166"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "id": {
          "description": "Use this id to internally identify this country in NextSteps",
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: c-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            },
            "examples": [
              {
                "context": "c",
                "value": "United States"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "codeContext": {
          "description": "Assigned Type: c-0400:CodeContext",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "CurrencyAmount": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CurrencyAmount"
      },
      "description": "A monetary amount, up to 4 decimal places. Decimal place needs to be included.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}Money"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "code": {
          "description": "Assigned Type: c-0400:CurrencyCodeISO",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}AlphaLength3"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": ""
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "USD"
              }
            ]
          },
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "minorUnit": {
          "description": "Assigned Type: c-0400:CurrencyMinorUnit",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Changed type from {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}nonNegativeInteger.",
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": ""
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "2"
              }
            ]
          },
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false,
          "pattern": "([0-4])"
        },
        "currencySource": {
          "description": "The origin of the requested currency code",
          "$ref": "#/definitions/CurrencySourceEnum"
        },
        "approximateInd": {
          "description": "True if the currency amount has been converted from the original amount",
          "type": "boolean"
        }
      }
    },
    "CustomerLoyalty": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "CustomerLoyalty"
      },
      "description": "Specifies the ID for the membership program.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Example value: common \u003d A7038204",
            "Example value: common \u003d A7038204",
            "Example value: common \u003d A7038204"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 1000,
          "minLength": 1
        },
        "id": {
          "description": "Customer Loyality Id",
          "type": "string"
        },
        "priority": {
          "description": "Assigned Type: c-0400:Priority",
          "type": "integer",
          "format": "int32",
          "maximum": 300,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "programId": {
          "description": "Assigned Type: c-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Example value: common \u003d AA"
              ]
            },
            "examples": [
              {
                "context": "c",
                "value": "United"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        },
        "programName": {
          "description": "Assigned Type: c-0400:LoyaltyProgramName",
          "type": "string",
          "maxLength": 128
        },
        "supplierType": {
          "description": "Assigned Type: c-0400:LoyaltySupplierType",
          "type": "string",
          "maxLength": 32
        },
        "supplier": {
          "description": "Assigned Type: c-0400:LoyaltySupplier",
          "type": "string",
          "maxLength": 128
        },
        "tier": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "Bronze,Silver,Gold"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "shareWithSupplier": {
          "description": "Assigned Type: c-0400:TinyStrings",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          }
        },
        "cardHolderName": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "validatedInd": {
          "description": "Customer loyalty number has been validated by the supplier",
          "type": "boolean"
        }
      }
    },
    "DateCreateModify": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "DateCreateModify"
      },
      "description": "Time stamp of the creation.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "creatorID": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "CreatorID"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "c123456789"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "lastModify": {
          "description": "Time stamp of last modification.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}dateTime"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "LastModifyDateTime"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "lastModifierID": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "LastModifierID"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "m987654321"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "purge": {
          "description": "Date an item will be purged from a system of record",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}date"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "PurgeDate"
              }
            ]
          },
          "type": "string",
          "format": "date"
        }
      }
    },
    "Email": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Email"
      },
      "description": "Electronic email addresses, in IETF specified format.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "id": {
          "description": "Electronic email addresses, in IETF specified format.",
          "type": "string"
        },
        "emailType": {
          "description": "Assigned Type: c-0400:OTACode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "EmailType"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
        },
        "comment": {
          "description": "Assigned Type: c-0400:StringText",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to128"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "Remark"
              }
            ]
          },
          "type": "string",
          "maxLength": 4096
        },
        "preferredFormat": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: EmailType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "TextFormat"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "text/html"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "shareMarketing": {
          "description": "Permission for sharing data for marketing purposes.",
          "$ref": "#/definitions/YesNoInheritEnum"
        },
        "shareSync": {
          "description": "Permission for sharing data for synchronization of information held by other travel service providers.",
          "$ref": "#/definitions/YesNoInheritEnum"
        },
        "optOutInd": {
          "description": "When yes, a customer has explicitly opted out of marketing communication. This is used in combination with the ShareAllMarketInd and only one of these attributes should have a value of yes.",
          "$ref": "#/definitions/YesNoInheritEnum"
        },
        "optInStatus": {
          "description": "When Yes, then the user has opted In",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "OptedIn"
              }
            ]
          },
          "$ref": "#/definitions/OptInStatusEnum"
        },
        "optInDate": {
          "description": "The datetime of receiving the opt in notice",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "2014-11-14T06:02:03"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "optOutDate": {
          "description": "The datetime the opt out notice was received",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "2016-01-14T09:57:59"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "validInd": {
          "description": "If true, this is a valid email address that has been system verified via a successful email transmission.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
              ]
            }
          },
          "type": "boolean"
        },
        "provisionedInd": {
          "description": "If true then the email address came from the provisioning process",
          "type": "boolean"
        }
      }
    },
    "ErrorWarning": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ErrorWarning"
      },
      "description": "Information about errors or warnings returned by atomic for the end user or to aid in troubleshooting",
      "properties": {
        "@type": {
          "type": "string"
        },
        "StatusCode": {
          "description": "Http standard response code",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "http:\\/\\/www.ietf.org\\/assignments\\/http-status-codes\\/http-status-codes.xml"
              ]
            },
            "examples": [
              {
                "context": "c",
                "value": "503"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "description": "TODO - \\nTravelport standardized error\\/warning text. May contain parameters, and include which specific part of the request did not work and why. Get standardized message list, with parameters if appropriate, from ?????????????????????",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "EasyJet flight 123 could not be booked. It is not available for the date requested."
              }
            ]
          },
          "type": "string",
          "maxLength": 4096
        },
        "NameValuePair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "maxItems": 100
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "StatusCode"
      ],
      "discriminator": "@type"
    },
    "Error": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ErrorWarning"
      },
      "description": "Information about errors or warnings returned by atomic for the end user or to aid in troubleshooting",
      "properties": {
        "@type": {
          "type": "string"
        },
        "StatusCode": {
          "description": "Http standard response code",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "http:\\/\\/www.ietf.org\\/assignments\\/http-status-codes\\/http-status-codes.xml"
              ]
            },
            "examples": [
              {
                "context": "c",
                "value": "503"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "description": "TODO - \\nTravelport standardized error\\/warning text. May contain parameters, and include which specific part of the request did not work and why. Get standardized message list, with parameters if appropriate, from ?????????????????????",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "EasyJet flight 123 could not be booked. It is not available for the date requested."
              }
            ]
          },
          "type": "string",
          "maxLength": 4096
        },
        "NameValuePair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "maxItems": 100
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "StatusCode"
      ],
      "discriminator": "@type"
    },
    "Warning": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ErrorWarning"
      },
      "description": "Information about errors or warnings returned by atomic for the end user or to aid in troubleshooting",
      "properties": {
        "@type": {
          "type": "string"
        },
        "StatusCode": {
          "description": "Http standard response code",
          "x-otm-annotations": {
            "documentation": {
              "references": [
                "http:\\/\\/www.ietf.org\\/assignments\\/http-status-codes\\/http-status-codes.xml"
              ]
            },
            "examples": [
              {
                "context": "c",
                "value": "503"
              }
            ]
          },
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "description": "TODO - \\nTravelport standardized error\\/warning text. May contain parameters, and include which specific part of the request did not work and why. Get standardized message list, with parameters if appropriate, from ?????????????????????",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "EasyJet flight 123 could not be booked. It is not available for the date requested."
              }
            ]
          },
          "type": "string",
          "maxLength": 4096
        },
        "NameValuePair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "maxItems": 100
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "StatusCode"
      ],
      "discriminator": "@type"
    },
    "ErrorWarningDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ErrorWarning"
      },
      "description": "Information about errors or warnings returned by atomic for the end user or to aid in troubleshooting",
      "allOf": [
        {
          "$ref": "#/definitions/ErrorWarning"
        },
        {
          "properties": {
            "SourceID": {
              "description": "Travelport assigned source host or core identifier",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "1G"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "SourceCode": {
              "description": "The error or warning code returned by the core\\/host system",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "1100003"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "SourceDescription": {
              "description": "The error message as it is returned from the originating core\\/host system",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "Flight {0} is not available"
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "SourceID"
          ]
        }
      ]
    },
    "ErrorDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ErrorWarning"
      },
      "description": "Information about errors or warnings returned by atomic for the end user or to aid in troubleshooting",
      "allOf": [
        {
          "$ref": "#/definitions/Error"
        },
        {
          "properties": {
            "SourceID": {
              "description": "Travelport assigned source host or core identifier",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "1G"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "SourceCode": {
              "description": "The error or warning code returned by the core\\/host system",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "1100003"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "SourceDescription": {
              "description": "The error message as it is returned from the originating core\\/host system",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "Flight {0} is not available"
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "SourceID"
          ]
        }
      ]
    },
    "WarningDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "ErrorWarning"
      },
      "description": "Information about errors or warnings returned by atomic for the end user or to aid in troubleshooting",
      "allOf": [
        {
          "$ref": "#/definitions/Warning"
        },
        {
          "properties": {
            "SourceID": {
              "description": "Travelport assigned source host or core identifier",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "1G"
                  }
                ]
              },
              "type": "string",
              "maxLength": 128
            },
            "SourceCode": {
              "description": "The error or warning code returned by the core\\/host system",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "1100003"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "SourceDescription": {
              "description": "The error message as it is returned from the originating core\\/host system",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "c",
                    "value": "Flight {0} is not available"
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "SourceID"
          ]
        }
      ]
    },
    "GeoPoliticalArea": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "GeoPoliticalArea"
      },
      "description": "The location code of the geographical location. Codes from Ref Pub",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "level": {
          "description": "Geo Political area level",
          "$ref": "#/definitions/GeoPoliticalAreaLevelEnum"
        },
        "id": {
          "description": "Optional internally referenced id",
          "type": "string"
        }
      }
    },
    "Identifier": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Identifier"
      },
      "description": "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.\\n\\nThe URL, system and company attributes can be omitted only when the system context can be implied by a parent or ancestor element.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Example value: common \u003d 2CFF2305-8D9A-41A1-A471-93B1F0E09068",
            "Example value: common \u003d 2CFF2305-8D9A-41A1-A471-93B1F0E09068",
            "Example value: common \u003d 2CFF2305-8D9A-41A1-A471-93B1F0E09068"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "authority": {
          "description": "Assigned Type: c-0400:StringShort",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Example value: common \u003d Travelport"
              ]
            },
            "examples": [
              {
                "context": "c",
                "value": "Travelport"
              }
            ]
          },
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Image": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Image"
      },
      "description": "Image Details",
      "properties": {
        "value": {
          "type": "string"
        },
        "height": {
          "description": "The number of pixels on the vertical edge of the image.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "The number of pixels on the horizontal edge of the image.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Measurement": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Measurement"
      },
      "description": "Used for dimensional units (width, height, depth) or weight",
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "type": {
          "description": "The type of measurement, such as width, height, weight",
          "$ref": "#/definitions/MeasurementTypeEnum"
        },
        "unit": {
          "description": "The unit that applies to the amount, such as feet, meters, pounds",
          "$ref": "#/definitions/UnitOfMeasureEnum"
        }
      }
    },
    "NameValuePair": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "NameValuePair"
      },
      "description": "Used for data stored in Name\\/Value pairs",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Optional internally referenced id",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "x0"
              }
            ]
          },
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: c-0400:String",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "Name"
              }
            ]
          },
          "type": "string",
          "maxLength": 512
        }
      },
      "required": [
        "name"
      ]
    },
    "NextStep": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "NextStep"
      },
      "description": "A URL that describes a step that can be applied to the resource containing the next step structure.",
      "x-otm-annotations": {
        "documentation": {
          "deprecations": [
            "to be removed"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string"
        },
        "id": {
          "description": "Identifier for the Next Step",
          "type": "string"
        },
        "action": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "Cancel"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "method": {
          "description": "possible action that can be performed on the returned results",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "DELETE"
              }
            ]
          },
          "$ref": "#/definitions/NextStepMethodEnum"
        },
        "description": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "remove offer from the order"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        }
      },
      "required": [
        "action",
        "method"
      ]
    },
    "NextSteps": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "NextSteps"
      },
      "x-otm-annotations": {
        "documentation": {
          "deprecations": [
            "to be removed",
            "to be removed"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "baseURI": {
          "description": "The base portion of the uri in order to shorten the uri\u0027s in the individual steps",
          "type": "string"
        },
        "id": {
          "description": "Optional internally referenced id",
          "type": "string"
        },
        "NextStep": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NextStep"
          },
          "maxItems": 20,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "baseURI",
        "NextStep"
      ],
      "discriminator": "@type"
    },
    "PersonName": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "description": "This provides name information for a person.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "Prefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
              ]
            }
          },
          "type": "string",
          "maxLength": 10
        },
        "Given": {
          "description": "Given name, first name or names.",
          "type": "string",
          "maxLength": 30
        },
        "Middle": {
          "description": "The middle name of the person name.",
          "type": "string",
          "maxLength": 30
        },
        "Surname": {
          "description": "Family name, last name. \\nNote: Simple form of person name should be used for the full name.\\nMay also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "Surname"
      ],
      "discriminator": "@type"
    },
    "PersonNameDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonName"
      },
      "description": "This provides name information for a person.",
      "allOf": [
        {
          "$ref": "#/definitions/PersonName"
        },
        {
          "properties": {
            "type": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name. Refer to OpenTravel Code List Name Type (NAM).",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                }
              },
              "$ref": "#/definitions/NameTypeEnum"
            },
            "language": {
              "description": "The language the name is represented in, e.g. an Eastern name versus a Western name.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}language"
                  ]
                }
              },
              "type": "string"
            },
            "SurnamePrefix": {
              "description": "The surname prefix, e.g \\\"van der\\\", \\\"von\\\", \\\"de\\\".",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to16"
                  ]
                }
              },
              "type": "string",
              "maxLength": 32
            },
            "Suffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "maxLength": 10
            },
            "Title": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "maxLength": 32
            },
            "Privacy": {
              "description": "Assigned Type: c-0400:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "defaultInd": {
              "description": "If true, this is the default or primary name within a collection of names.",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Privacy": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Privacy"
      },
      "description": "Confidential details for marketing purpose",
      "properties": {
        "id": {
          "description": "Optional internally referenced id",
          "type": "string"
        },
        "shareMarketing": {
          "description": "Permission for sharing data for marketing purposes.",
          "$ref": "#/definitions/YesNoInheritEnum"
        },
        "shareSync": {
          "description": "Permission for sharing data for synchronization of information held by other travel service providers.",
          "$ref": "#/definitions/YesNoInheritEnum"
        },
        "optOutInd": {
          "description": "When yes, a customer has explicitly opted out of marketing communication. This is used in combination with the ShareAllMarketInd and only one of these attributes should have a value of yes.",
          "$ref": "#/definitions/YesNoInheritEnum"
        },
        "optInStatus": {
          "description": "When Yes, then the user has opted In",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "OptedIn"
              }
            ]
          },
          "$ref": "#/definitions/OptInStatusEnum"
        },
        "optInDate": {
          "description": "The datetime of receiving the opt in notice",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "2014-11-14T06:02:03"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        },
        "optOutDate": {
          "description": "The datetime the opt out notice was received",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "2016-01-14T09:57:59"
              }
            ]
          },
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Result": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Result"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "status": {
          "description": "Indication of the processing status of the response message",
          "$ref": "#/definitions/ResultStatusEnum"
        },
        "Error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "maxItems": 50
        },
        "Warning": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Warning"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "StateProv": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "StateProv"
      },
      "description": "The standard code or abbreviation for the state, province, or region with optional name",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StateProvCodeType"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "name": {
          "description": "Assigned Type: c-0400:String",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength0to64"
              ]
            },
            "examples": [
              {
                "context": "c",
                "value": "Texas"
              }
            ]
          },
          "type": "string",
          "maxLength": 512
        }
      }
    },
    "Telephone": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "description": "Information about a telephone number, including the actual number and its usage.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "countryAccessCode": {
          "description": "Assigned Type: c-0400:TelephoneCountryAccessCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to3"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "CountryAccessCode"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "1"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,3}"
        },
        "areaCityCode": {
          "description": "Assigned Type: c-0400:TelephoneAreaCityCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "AreaCityCode"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "909"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,8}"
        },
        "phoneNumber": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "PhoneNumber"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "5551212"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "extension": {
          "description": "Assigned Type: c-0400:TelephoneExtension",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to5"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "Extension"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "123"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{0,5}"
        },
        "id": {
          "description": "UOptional internally referenced id",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RPH_Type"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "RPH"
              }
            ]
          },
          "type": "string"
        },
        "cityCode": {
          "description": "Assigned Type: c-0400:StringUpperCaseAlphaNumericMax10",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "DEN"
              }
            ]
          },
          "type": "string",
          "maxLength": 10,
          "pattern": "([A-Z0-9]+)?"
        },
        "role": {
          "$ref": "#/definitions/Enum_TelephoneRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "phoneNumber"
      ],
      "discriminator": "@type"
    },
    "OrganizationTelephone": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "description": "Information about a telephone number, including the actual number and its usage.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "countryAccessCode": {
          "description": "Assigned Type: c-0400:TelephoneCountryAccessCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to3"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "CountryAccessCode"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "1"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,3}"
        },
        "areaCityCode": {
          "description": "Assigned Type: c-0400:TelephoneAreaCityCode",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to8"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "AreaCityCode"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "909"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{1,8}"
        },
        "phoneNumber": {
          "description": "Assigned Type: c-0400:StringTiny",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "PhoneNumber"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "5551212"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        },
        "extension": {
          "description": "Assigned Type: c-0400:TelephoneExtension",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}NumericStringLength1to5"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "Extension"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "123"
              }
            ]
          },
          "type": "string",
          "pattern": "[0-9]{0,5}"
        },
        "id": {
          "description": "UOptional internally referenced id",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}RPH_Type"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "RPH"
              }
            ]
          },
          "type": "string"
        },
        "cityCode": {
          "description": "Assigned Type: c-0400:StringUpperCaseAlphaNumericMax10",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "DEN"
              }
            ]
          },
          "type": "string",
          "maxLength": 10,
          "pattern": "([A-Z0-9]+)?"
        },
        "role": {
          "$ref": "#/definitions/Enum_TelephoneRole"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "phoneNumber"
      ],
      "discriminator": "@type"
    },
    "TelephoneDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "description": "Information about a telephone number, including the actual number and its usage.",
      "allOf": [
        {
          "$ref": "#/definitions/Telephone"
        },
        {
          "properties": {
            "phoneLocationType": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "PhoneLocationType"
                  }
                ],
                "examples": [
                  {
                    "context": "c",
                    "value": "6"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "phoneTechType": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "PhoneTechType"
                  }
                ],
                "examples": [
                  {
                    "context": "c",
                    "value": "1"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "phoneUseType": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "PhoneUseType"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "pin": {
              "description": "Assigned Type: c-0400:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "PIN"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "priority": {
              "description": "Assigned Type: c-0400:Priority",
              "type": "integer",
              "format": "int32",
              "maximum": 300,
              "exclusiveMaximum": false,
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "Privacy": {
              "description": "Assigned Type: c-0400:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "Enum_TelephoneRole": {
              "description": "Assigned Type: c-0400:Enum_TelephoneRole",
              "$ref": "#/definitions/Enum_TelephoneRole"
            },
            "Comment": {
              "description": "Assigned Type: c-0400:Comment",
              "$ref": "#/definitions/Comment"
            },
            "defaultInd": {
              "description": "When true, indicates a default value should be used.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "DefaultInd"
                  }
                ]
              },
              "type": "boolean"
            },
            "provisionedInd": {
              "description": "true indicates this phone number was created through provisioned",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "OrganizationTelephoneDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Telephone"
      },
      "description": "Information about a telephone number, including the actual number and its usage.",
      "allOf": [
        {
          "$ref": "#/definitions/OrganizationTelephone"
        },
        {
          "properties": {
            "phoneLocationType": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "PhoneLocationType"
                  }
                ],
                "examples": [
                  {
                    "context": "c",
                    "value": "6"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "phoneTechType": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "PhoneTechType"
                  }
                ],
                "examples": [
                  {
                    "context": "c",
                    "value": "1"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "phoneUseType": {
              "description": "Assigned Type: c-0400:OTACode",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}OTA_CodeType"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "PhoneUseType"
                  }
                ]
              },
              "type": "string",
              "pattern": "[0-9A-Z]{1,3}(\\.[A-Z]{3}(\\.X){0,1}){0,1}"
            },
            "pin": {
              "description": "Assigned Type: c-0400:StringTiny",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to8"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "PIN"
                  }
                ]
              },
              "type": "string",
              "maxLength": 32
            },
            "priority": {
              "description": "Assigned Type: c-0400:Priority",
              "type": "integer",
              "format": "int32",
              "maximum": 300,
              "exclusiveMaximum": false,
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "Privacy": {
              "description": "Assigned Type: c-0400:Privacy",
              "$ref": "#/definitions/Privacy"
            },
            "Enum_TelephoneRole": {
              "description": "Assigned Type: c-0400:Enum_TelephoneRole",
              "$ref": "#/definitions/Enum_TelephoneRole"
            },
            "Comment": {
              "description": "Assigned Type: c-0400:Comment",
              "$ref": "#/definitions/Comment"
            },
            "defaultInd": {
              "description": "When true, indicates a default value should be used.",
              "x-otm-annotations": {
                "documentation": {
                  "implementers": [
                    "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}boolean"
                  ]
                },
                "equivalents": [
                  {
                    "context": "c",
                    "value": "DefaultInd"
                  }
                ]
              },
              "type": "boolean"
            },
            "provisionedInd": {
              "description": "true indicates this phone number was created through provisioned",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Enum_TelephoneRole": {
      "properties": {
        "value": {
          "$ref": "#/definitions/Enum_TelephoneRole_Open"
        },
        "extension": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        }
      }
    },
    "Enum_TelephoneRole_Base": {
      "type": "string",
      "enum": [
        "Mobile",
        "Home",
        "Work",
        "Office",
        "Fax",
        "Other"
      ]
    },
    "Enum_TelephoneRole_Open": {
      "type": "string",
      "enum": [
        "Mobile",
        "Home",
        "Work",
        "Office",
        "Fax",
        "Other",
        "Other_"
      ]
    },
    "TextBlock": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextBlock"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "BrandText": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BrandText"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "target": {
          "description": "The audience targeted for the brand information",
          "$ref": "#/definitions/BrandTargetEnum"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "RateDescription": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextBlock"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "TermsAndConditionsSubCategory": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextBlock"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "BrandFeatureText": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextBlock"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "TextBlockDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextBlock"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "allOf": [
        {
          "$ref": "#/definitions/TextBlock"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "BrandTextDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BrandText"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "allOf": [
        {
          "$ref": "#/definitions/BrandText"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "RateDescriptionDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextBlock"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "allOf": [
        {
          "$ref": "#/definitions/RateDescription"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "TermsAndConditionsSubCategoryDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextBlock"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "allOf": [
        {
          "$ref": "#/definitions/TermsAndConditionsSubCategory"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "BrandFeatureTextDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "TextBlock"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "allOf": [
        {
          "$ref": "#/definitions/BrandFeatureText"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "TextFormatted": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "TextFormatted"
      },
      "description": "Provides text and indicates whether it is formatted or not.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
          ]
        }
      },
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "The language in which the text is provided.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "AttributeGroup: LanguageGroup"
              ]
            },
            "examples": [
              {
                "context": "c",
                "value": "en"
              }
            ]
          },
          "type": "string"
        },
        "textFormat": {
          "description": "Indicates the format of text used in the description e.g. plain text or html.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "LocalAnonymousType: FormattedTextTextType_TextFormat"
              ]
            },
            "equivalents": [
              {
                "context": "c",
                "value": "TextFormat"
              }
            ],
            "examples": [
              {
                "context": "c",
                "value": "Sample Formatted text"
              }
            ]
          },
          "$ref": "#/definitions/TextFormatEnum"
        }
      }
    },
    "Comment": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "Comment"
      },
      "description": "Textual information.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "language": {
          "description": "Identifies the language of the comment.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "EN"
              }
            ]
          },
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BaseResponse"
      },
      "description": "Used as the Base Payload of a Response Action Facet",
      "properties": {
        "@type": {
          "type": "string"
        },
        "transactionId": {
          "description": "Unique transaction, correlation or tracking id for a single request and reply i.e. for a single transaction. Should be a 128 bit GUID format. Also know as E2ETrackingId.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c-0100",
                "value": "6570ed7b-89fe-4334-9c78-af282a977ba6"
              }
            ]
          },
          "type": "string"
        },
        "traceId": {
          "description": "Optional ID for internal child transactions created for processing a single request (single transaction). Should be a 128 bit GUID format. Also known as ChildTrackingId.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "examples": [
              {
                "context": "c-0100",
                "value": "c009a53c-48f6-4084-b7b6-3043fa9fec67"
              }
            ]
          },
          "type": "string"
        },
        "Result": {
          "description": "Assigned Type: c-0400:Result",
          "$ref": "#/definitions/Result"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "NextSteps": {
          "description": "Assigned Type: c-0400:NextSteps",
          "$ref": "#/definitions/NextSteps"
        },
        "ReferenceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceList"
          },
          "maxItems": 5
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferenceList": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "Used to create a list of referenced objects, example ReferenceListFlight, ReferenceListBrand",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Uniquely identifies for the Reference List",
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferenceListTextBlock": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "Used to create a list of referenced objects, example ReferenceListFlight, ReferenceListBrand",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "TextBlock": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TextBlock"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "CurrencySourceEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "CurrencySourceEnum"
      },
      "description": "The system requesting or returning the currency code specified in the attribute",
      "type": "string",
      "enum": [
        "Supplier",
        "Charged",
        "Requested"
      ]
    },
    "DayOfWeekEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "DayOfWeekEnum"
      },
      "description": "The names of the days of the week.",
      "type": "string",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ]
    },
    "FareTypeEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "FareTypeEnum"
      },
      "description": "Defines the type of fares to return (Only public fares, Only private fares, Only agency private fares, Only\\n airline private fares or all fares)",
      "type": "string",
      "enum": [
        "PublicFare",
        "AgencyPrivateFare",
        "AirlinePrivateFare",
        "NetFare"
      ]
    },
    "GenderEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "GenderEnum"
      },
      "type": "string",
      "enum": [
        "Male",
        "Female",
        "Unknown"
      ]
    },
    "GeoPoliticalAreaLevelEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "GeoPoliticalAreaLevelEnum"
      },
      "type": "string",
      "enum": [
        "World",
        "Global Area",
        "Continent Group",
        "Continent",
        "Country",
        "StateProvince",
        "City",
        "Airport"
      ]
    },
    "MeasurementTypeEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "MeasurementTypeEnum"
      },
      "description": "The type of measurement such as width, height, weight",
      "type": "string",
      "enum": [
        "Width",
        "Height",
        "Depth",
        "Weight",
        "OverallDimension"
      ]
    },
    "NameTypeEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "NameTypeEnum"
      },
      "description": "OTA Code list: Name Type\\tNAM\\t\\n\\t1\\tFormer\\n\\t2\\tNickname\\n\\t3\\tAlternate\\n\\t4\\tMaiden",
      "type": "string",
      "enum": [
        "Former",
        "Nickname",
        "Alternate",
        "Maiden"
      ]
    },
    "NextStepMethodEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "NextStepMethodEnum"
      },
      "description": "Describes the set of potential methods that can be taken after an operation.",
      "x-otm-annotations": {
        "documentation": {
          "deprecations": [
            "to be deleted"
          ]
        }
      },
      "type": "string",
      "enum": [
        "GET",
        "DELETE",
        "PUT",
        "POST"
      ]
    },
    "OptInStatusEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "OptInStatusEnum"
      },
      "type": "string",
      "enum": [
        "OptedIn",
        "OptedOut",
        "Unknown"
      ]
    },
    "ResultStatusEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "ResultStatusEnum"
      },
      "description": "The status of an error or warning",
      "type": "string",
      "enum": [
        "Not processed",
        "Incomplete",
        "Complete",
        "Unknown"
      ]
    },
    "SeatAvailability_Enum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "SeatAvailability_Enum"
      },
      "description": "The list of availabile statuses of the seat for a traveler.",
      "type": "string",
      "enum": [
        "Available",
        "Blocked",
        "Reserved",
        "Unavailable",
        "Requested",
        "NoSeat",
        "Pending"
      ]
    },
    "TextFormatEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "TextFormatEnum"
      },
      "description": "Describes the format of text such as plain text or html",
      "type": "string",
      "enum": [
        "PlainText",
        "HTML"
      ]
    },
    "UnitOfMeasureEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "UnitOfMeasureEnum"
      },
      "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
      "type": "string",
      "enum": [
        "Miles",
        "Kilometers",
        "Meters",
        "Millimeters",
        "Centimeters",
        "Yards",
        "Feet",
        "Inches",
        "Pixels",
        "Block",
        "Megabytes",
        "Gigabytes",
        "Square feet",
        "Square meters",
        "Pounds",
        "Kilograms",
        "Square inch",
        "Square yard",
        "Acre",
        "Square millimeter",
        "Square centimeter",
        "Hectare",
        "Ounce",
        "Gram",
        "Gallons",
        "Liters",
        "Kilowatts",
        "Cubic meters"
      ]
    },
    "YesNoInheritEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "YesNoInheritEnum"
      },
      "type": "string",
      "enum": [
        "Yes",
        "No",
        "Inherit"
      ]
    },
    "ReferenceListProduct": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "Used to create a list of referenced objects, example ReferenceListFlight, ReferenceListBrand",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "Product": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductID"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ReferenceListTermsAndConditions": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "Used to create a list of referenced objects, example ReferenceListFlight, ReferenceListBrand",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "TermsAndConditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TermsAndConditionsID"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "TermsAndConditionsID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "TermsAndConditions"
      },
      "description": "Terms And Conditions that apply to an offer",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "termsAndConditionsRef": {
          "description": "Used to reference another instance of this object in the same message.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TermsAndConditions": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "TermsAndConditions"
      },
      "description": "Terms And Conditions that apply to an offer",
      "allOf": [
        {
          "$ref": "#/definitions/TermsAndConditionsID"
        },
        {
          "properties": {
            "ExpiryDate": {
              "description": "The data and time range that the Offer is valid.",
              "type": "string",
              "format": "date-time"
            },
            "ExtensionPoint_Summary": {
              "$ref": "#/definitions/ExtensionPoint_Summary"
            }
          }
        }
      ]
    },
    "ProductID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Product"
      },
      "description": "A product is any product, service or package of products and services  that can be priced and purchased by a specific supplier.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "productRef": {
          "description": "Used to reference another instance of this object in the same message",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Product": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Product"
      },
      "description": "A product is any product, service or package of products and services  that can be priced and purchased by a specific supplier.",
      "allOf": [
        {
          "$ref": "#/definitions/ProductID"
        },
        {
          "properties": {
            "Quantity": {
              "description": "The number of products dependent on context",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint_Summary": {
              "$ref": "#/definitions/ExtensionPoint_Summary"
            }
          }
        }
      ]
    },
    "ReferenceListBrand": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "Used to create a list of referenced objects, example ReferenceListFlight, ReferenceListBrand",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "Brand": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrandID"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "BrandID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Brand"
      },
      "description": "The brand name",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "BrandRef": {
          "description": "Used to reference another instance of this object in the same message",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Brand": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Brand"
      },
      "description": "The brand name",
      "allOf": [
        {
          "$ref": "#/definitions/BrandID"
        },
        {
          "properties": {
            "name": {
              "description": "Assigned Type: ctbr-0400:BrandName",
              "type": "string",
              "maxLength": 128
            },
            "tier": {
              "description": "Assigned Type: c-0400:NumberSingleDigit",
              "type": "integer",
              "format": "int32"
            },
            "BrandAttribute": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrandAttribute"
              },
              "maxItems": 7,
              "minItems": 1
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "name",
            "BrandAttribute"
          ]
        }
      ]
    },
    "BrandAttribute": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BrandAttribute"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "classification": {
          "description": "The Travelport classification used for a category of ancillaries such as Seat, Bags, etc. This is an initial list that will be added to.",
          "$ref": "#/definitions/BrandClassificationEnum"
        },
        "inclusion": {
          "description": "whether this attribute is included, chargeable, etc.",
          "$ref": "#/definitions/BrandInclusionEnum"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "classification",
        "inclusion"
      ],
      "discriminator": "@type"
    },
    "BrandFullInfoID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "BrandFullInfo"
      },
      "description": "The full information returned from the merchandising service",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "BrandFullInfoRef": {
          "description": "Used to reference another instance of this object in the same message",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BrandFullInfo": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "BrandFullInfo"
      },
      "description": "The full information returned from the merchandising service",
      "allOf": [
        {
          "$ref": "#/definitions/BrandFullInfoID"
        },
        {
          "properties": {
            "BrandInfo": {
              "description": "Assigned Type: ctbr-0400:BrandInfo",
              "$ref": "#/definitions/BrandInfo"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "BrandFullInfoQueryMerchandising": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "BrandFullInfo"
      },
      "description": "The full information returned from the merchandising service",
      "properties": {
        "@type": {
          "type": "string"
        },
        "MerchandisingID": {
          "description": "Merchandising ID",
          "type": "string",
          "maxLength": 512
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BrandInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BrandInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ctbr-0400:BrandName",
          "type": "string",
          "maxLength": 128
        },
        "inclusion": {
          "description": "The indicator as to hoe the brand and the product are associated.",
          "$ref": "#/definitions/BrandInclusionEnum"
        },
        "BrandText": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandText"
          },
          "maxItems": 10
        },
        "AttributeInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeInfo"
          },
          "maxItems": 25
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "name",
        "inclusion"
      ],
      "discriminator": "@type"
    },
    "AttributeInfo": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BrandInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ctbr-0400:BrandName",
          "type": "string",
          "maxLength": 128
        },
        "inclusion": {
          "description": "The indicator as to hoe the brand and the product are associated.",
          "$ref": "#/definitions/BrandInclusionEnum"
        },
        "BrandText": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandText"
          },
          "maxItems": 10
        },
        "AttributeInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeInfo"
          },
          "maxItems": 25
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "name",
        "inclusion"
      ],
      "discriminator": "@type"
    },
    "AncillaryBrandText": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BrandText"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "target": {
          "description": "The audience targeted for the brand information",
          "$ref": "#/definitions/BrandTargetEnum"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "FareBrandText": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BrandText"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "target": {
          "description": "The audience targeted for the brand information",
          "$ref": "#/definitions/BrandTargetEnum"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "AncillaryBrandTextDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BrandText"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "allOf": [
        {
          "$ref": "#/definitions/AncillaryBrandText"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "FareBrandTextDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BrandText"
      },
      "description": "Blocks of text with title, discription, images and URLs, with language translations.",
      "allOf": [
        {
          "$ref": "#/definitions/FareBrandText"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "BrandInclusionEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "BrandInclusionEnum"
      },
      "description": "The indicator as to hoe the brand and the product are associated.",
      "type": "string",
      "enum": [
        "Included",
        "Chargeable",
        "Not Offered"
      ]
    },
    "BrandTargetEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "BrandTargetEnum"
      },
      "description": "The audience targeted for the brand information",
      "type": "string",
      "enum": [
        "Strapline",
        "MarketingAgent",
        "MarketingConsumer",
        "External",
        "Short",
        "Agent",
        "Consumer",
        "Upsell"
      ]
    },
    "BrandClassificationEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "BrandClassificationEnum"
      },
      "description": "The Travelport classification used for a category of ancillaries such as Seat, Bags, etc. This is an initial list that will be added to.",
      "type": "string",
      "enum": [
        "CheckedBag",
        "CarryOn",
        "Rebooking",
        "Refund",
        "Seats",
        "Meals",
        "WiFi"
      ]
    },
    "ReferenceListBrandFullInfo": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "Used to create a list of referenced objects, example ReferenceListFlight, ReferenceListBrand",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "BrandFullInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrandFullInfoID"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "TermsAndConditionsAir": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "TermsAndConditions"
      },
      "description": "Terms And Conditions that apply to an offer",
      "allOf": [
        {
          "$ref": "#/definitions/TermsAndConditions"
        },
        {
          "properties": {
            "validatingCarrier": {
              "description": "Assigned Type: c-0400:AirlineCode",
              "type": "string",
              "pattern": "([a-zA-Z0-9]{2,3})"
            },
            "BaggageAllowance": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BaggageAllowance"
              },
              "maxItems": 99
            },
            "FareRuleInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FareRuleInfo"
              },
              "maxItems": 50
            },
            "Restriction": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 128
              },
              "maxItems": 10
            },
            "OrganizationIdentifier": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganizationIdentifier"
              },
              "maxItems": 10
            },
            "ExtensionPoint_Custom": {
              "$ref": "#/definitions/ExtensionPoint_Custom"
            }
          }
        }
      ]
    },
    "ProductAir": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Product"
      },
      "description": "A product is any product, service or package of products and services  that can be priced and purchased by a specific supplier.",
      "allOf": [
        {
          "$ref": "#/definitions/Product"
        },
        {
          "properties": {
            "totalDuration": {
              "description": "Total duration of all Segments that are part of this ProductAir",
              "type": "string"
            },
            "FlightSegment": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FlightSegment"
              },
              "maxItems": 99,
              "minItems": 1
            },
            "PassengerFlight": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PassengerFlight"
              },
              "maxItems": 10,
              "minItems": 1
            },
            "ExtensionPoint_Custom": {
              "$ref": "#/definitions/ExtensionPoint_Custom"
            }
          },
          "required": [
            "FlightSegment",
            "PassengerFlight"
          ]
        }
      ]
    },
    "ReferenceListFlight": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "Used to create a list of referenced objects, example ReferenceListFlight, ReferenceListBrand",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "Flight": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FlightID"
              },
              "minItems": 1
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "Flight"
          ]
        }
      ]
    },
    "PassengerFlight": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PassengerFlight"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "passengerQuantity": {
          "description": "Number of passengers of the specified passenger type code",
          "type": "integer",
          "format": "int32"
        },
        "passengerTypeCode": {
          "description": "Assigned Type: c-0400:PassengerTypeCode",
          "type": "string",
          "maxLength": 5,
          "minLength": 3,
          "pattern": "([a-zA-Z0-9]{3,5})"
        },
        "FlightProduct": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlightProduct"
          },
          "maxItems": 99
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FlightProduct": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "FlightProduct"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "segmentSequence": {
          "description": "Assigned Type: ctar-0400:SegmentSequenceList",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "classOfService": {
          "description": "Assigned Type: c-0400:ClassOfService",
          "type": "string",
          "maxLength": 2,
          "minLength": 1,
          "pattern": "([a-zA-Z0-9]{1,2})"
        },
        "cabin": {
          "description": "The cabin",
          "$ref": "#/definitions/CabinAirEnum"
        },
        "fareBasisCode": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "fareType": {
          "description": "Type of fare which has been returned",
          "$ref": "#/definitions/FareTypeEnum"
        },
        "Brand": {
          "description": "Assigned Type: ctbr-0400:Brand",
          "$ref": "#/definitions/BrandID"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "segmentSequence"
      ],
      "discriminator": "@type"
    },
    "FlightSegment": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "FlightSegment"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "sequence": {
          "description": "Assigned Type: ctar-0400:SegmentSequence",
          "type": "integer",
          "format": "int32"
        },
        "connectionDuration": {
          "description": "The actual duration (in minutes) between\\n\\tsegments.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}int"
              ]
            }
          },
          "type": "string"
        },
        "Flight": {
          "description": "Assigned Type: ctar-0400:Flight",
          "$ref": "#/definitions/FlightID"
        },
        "boundFlightsInd": {
          "description": "If present and true, the Segments in this Connection must be sold and cancelled together.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "sequence",
        "connectionDuration",
        "Flight"
      ],
      "discriminator": "@type"
    },
    "FlightID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Flight"
      },
      "description": "Base object that is extended for any other type of segment i.e. rail, flight, bus, ferry",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internal ID",
          "type": "string"
        },
        "FlightRef": {
          "description": "Reference to a Flight object eslewhere in the message",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Flight": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Flight"
      },
      "description": "Base object that is extended for any other type of segment i.e. rail, flight, bus, ferry",
      "allOf": [
        {
          "$ref": "#/definitions/FlightID"
        },
        {
          "properties": {
            "distance": {
              "description": "Assigned Type: c-0400:NonnegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "stops": {
              "description": "Assigned Type: c-0400:NumberSingleDigit",
              "type": "integer",
              "format": "int32"
            },
            "duration": {
              "description": "Elapsed flight time in minutes",
              "type": "string"
            },
            "carrier": {
              "description": "Assigned Type: c-0400:AirlineCode",
              "type": "string",
              "pattern": "([a-zA-Z0-9]{2,3})"
            },
            "number": {
              "description": "Assigned Type: c-0400:FlightNumber",
              "type": "string",
              "pattern": "[0-9]{1,4}[A-Z]?|OPEN|ARNK"
            },
            "operatingCarrier": {
              "description": "Assigned Type: c-0400:AirlineCode",
              "type": "string",
              "pattern": "([a-zA-Z0-9]{2,3})"
            },
            "operatingCarrierName": {
              "description": "Assigned Type: c-0400:StringShort",
              "type": "string",
              "maxLength": 128
            },
            "equipment": {
              "description": "Assigned Type: c-0400:AirEquipCodeIATA",
              "type": "string",
              "pattern": "([A-Z0-9]{3})?"
            },
            "Departure": {
              "description": "Assigned Type: ctar-0400:Departure",
              "$ref": "#/definitions/Departure"
            },
            "Arrival": {
              "description": "Assigned Type: ctar-0400:Arrival",
              "$ref": "#/definitions/Arrival"
            },
            "IntermediateStop": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IntermediateStop"
              },
              "maxItems": 9
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "carrier",
            "number",
            "operatingCarrierName",
            "Departure",
            "Arrival"
          ]
        }
      ]
    },
    "IntermediateStop": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "IntermediateStop"
      },
      "description": "An intermediate stop location and duration",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "duration": {
          "description": "Duration stopped at this location",
          "type": "string"
        },
        "equipment": {
          "description": "Assigned Type: c-0400:AirEquipCodeIATA",
          "type": "string",
          "pattern": "([A-Z0-9]{3})?"
        }
      }
    },
    "CabinAirEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "CabinAirEnum"
      },
      "description": "Specifies the cabin type (e.g. first, business, economy).",
      "type": "string",
      "enum": [
        "PremiumFirst",
        "First",
        "Business",
        "PremiumEconomy",
        "Economy"
      ]
    },
    "BaggageAllowance": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BaggageAllowance"
      },
      "description": "Baggage policy and prices as part of the terms and conditions",
      "properties": {
        "@type": {
          "type": "string"
        },
        "passengerTypeCodes": {
          "description": "Assigned Type: c-0400:PassengerTypeCodeList",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 5,
            "minLength": 3,
            "pattern": "([a-zA-Z0-9]{3,5})"
          }
        },
        "baggageType": {
          "description": "The type of baggage that is being limmited.",
          "$ref": "#/definitions/BaggageTypeEnum"
        },
        "ProductRef": {
          "description": "A product is any product, service or package of products and services  that can be priced and purchased by a specific supplier.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "BaggageItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaggageItem"
          },
          "maxItems": 10,
          "minItems": 1
        },
        "SegmentSequenceList": {
          "description": "Segment sequence is only to be used when the baggage allowance differs between segments within a product. If so, then the ProducRef must be specified.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "Text": {
          "description": "Text returned from the Airlines with general baggage information.",
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "BaggageItem"
      ],
      "discriminator": "@type"
    },
    "BaggageAllowanceDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BaggageAllowance"
      },
      "description": "Baggage policy and prices as part of the terms and conditions",
      "allOf": [
        {
          "$ref": "#/definitions/BaggageAllowance"
        },
        {
          "properties": {
            "url": {
              "description": "Url for the airline\u0027s baggage information web site",
              "type": "string"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "BaggageTypeEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "BaggageTypeEnum"
      },
      "type": "string",
      "enum": [
        "CarryOn",
        "FirstCheckedBag",
        "SecondCheckedBag",
        "AdditionalBags",
        "BaggageEmbargo"
      ]
    },
    "DepartureArrival": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DepartureArrival"
      },
      "description": "Describes the departure or arrival attributes for a flight.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "location": {
          "description": "Assigned Type: c-0400:LocationCodeIATA",
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "date": {
          "description": "Local date of for arrival or departure",
          "type": "string",
          "format": "date"
        },
        "time": {
          "description": "Local time Date of for arrival or departure",
          "type": "string"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "location",
        "date",
        "time"
      ],
      "discriminator": "@type"
    },
    "Arrival": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DepartureArrival"
      },
      "description": "Describes the departure or arrival attributes for a flight.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "location": {
          "description": "Assigned Type: c-0400:LocationCodeIATA",
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "date": {
          "description": "Local date of for arrival or departure",
          "type": "string",
          "format": "date"
        },
        "time": {
          "description": "Local time Date of for arrival or departure",
          "type": "string"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "location",
        "date",
        "time"
      ],
      "discriminator": "@type"
    },
    "Departure": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DepartureArrival"
      },
      "description": "Describes the departure or arrival attributes for a flight.",
      "properties": {
        "@type": {
          "type": "string"
        },
        "location": {
          "description": "Assigned Type: c-0400:LocationCodeIATA",
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "date": {
          "description": "Local date of for arrival or departure",
          "type": "string",
          "format": "date"
        },
        "time": {
          "description": "Local time Date of for arrival or departure",
          "type": "string"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "location",
        "date",
        "time"
      ],
      "discriminator": "@type"
    },
    "DepartureArrivalDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DepartureArrival"
      },
      "description": "Describes the departure or arrival attributes for a flight.",
      "allOf": [
        {
          "$ref": "#/definitions/DepartureArrival"
        },
        {
          "properties": {
            "terminal": {
              "description": "Assigned Type: c-0400:StringAlphaNumeric",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "ctar",
                    "value": "A"
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096,
              "pattern": "([0-9a-zA-Z]+)?"
            },
            "country": {
              "description": "Assigned Type: c-0400:CountryCodeISO",
              "type": "string",
              "pattern": "[a-zA-Z]{2}"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "ArrivalDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DepartureArrival"
      },
      "description": "Describes the departure or arrival attributes for a flight.",
      "allOf": [
        {
          "$ref": "#/definitions/Arrival"
        },
        {
          "properties": {
            "terminal": {
              "description": "Assigned Type: c-0400:StringAlphaNumeric",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "ctar",
                    "value": "A"
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096,
              "pattern": "([0-9a-zA-Z]+)?"
            },
            "country": {
              "description": "Assigned Type: c-0400:CountryCodeISO",
              "type": "string",
              "pattern": "[a-zA-Z]{2}"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "DepartureDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "DepartureArrival"
      },
      "description": "Describes the departure or arrival attributes for a flight.",
      "allOf": [
        {
          "$ref": "#/definitions/Departure"
        },
        {
          "properties": {
            "terminal": {
              "description": "Assigned Type: c-0400:StringAlphaNumeric",
              "x-otm-annotations": {
                "examples": [
                  {
                    "context": "ctar",
                    "value": "A"
                  }
                ]
              },
              "type": "string",
              "maxLength": 4096,
              "pattern": "([0-9a-zA-Z]+)?"
            },
            "country": {
              "description": "Assigned Type: c-0400:CountryCodeISO",
              "type": "string",
              "pattern": "[a-zA-Z]{2}"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "BaggageItem": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BaggageItem"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "Assigned Type: c-0400:NumberSingleDigit",
          "type": "integer",
          "format": "int32"
        },
        "Measurement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measurement"
          },
          "maxItems": 6
        },
        "BaggageFee": {
          "description": "Assigned Type: c-0400:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "Text": {
          "description": "Text returned from the shop response",
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FareRuleText": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "FareRuleText"
      },
      "description": "Text describing this fare rule",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "name": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "Change": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Change"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "penaltyTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PenaltyTypeEnum"
          }
        },
        "Amount": {
          "description": "Assigned Type: c-0400:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "PenaltyAppliesTo": {
          "description": "Assigned Type: ctar-0400:PenaltyAppliesToEnum",
          "$ref": "#/definitions/PenaltyAppliesToEnum"
        },
        "notPermittedInd": {
          "description": "Changes are not permitted",
          "type": "boolean"
        },
        "indeterminateInd": {
          "description": "structured fare rules could not be determined for this category",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Refund": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Change"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "penaltyTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PenaltyTypeEnum"
          }
        },
        "Amount": {
          "description": "Assigned Type: c-0400:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "PenaltyAppliesTo": {
          "description": "Assigned Type: ctar-0400:PenaltyAppliesToEnum",
          "$ref": "#/definitions/PenaltyAppliesToEnum"
        },
        "notPermittedInd": {
          "description": "Changes are not permitted",
          "type": "boolean"
        },
        "indeterminateInd": {
          "description": "structured fare rules could not be determined for this category",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PenaltyTypeEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "PenaltyTypeEnum"
      },
      "type": "string",
      "enum": [
        "BeforeDeparture",
        "AfterDeparture",
        "Anytime",
        "NoShow",
        "Minimum",
        "Maximum",
        "ExchangeRequired",
        "ExchangeNotRequired"
      ]
    },
    "Penalties": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "Penalties"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "passengerTypeCodes": {
          "description": "Assigned Type: c-0400:PassengerTypeCodeList",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 5,
            "minLength": 3,
            "pattern": "([a-zA-Z0-9]{3,5})"
          }
        },
        "Change": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Change"
          },
          "maxItems": 10
        },
        "Refund": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "maxItems": 10
        },
        "Waiver": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WaiverEnum"
          },
          "maxItems": 10
        },
        "involuntaryInd": {
          "description": "Penalties apply for involuntary changes initiated by the airline",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FareRuleInfo": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "FareRuleInfo"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "flightRefs": {
          "description": "The flight segment IDs to which this fare rule applies",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ruleNumber": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "tariffNumber": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FareRuleInfoText": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "FareRuleInfo"
      },
      "allOf": [
        {
          "$ref": "#/definitions/FareRuleInfo"
        },
        {
          "properties": {
            "FareRuleText": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FareRuleText"
              },
              "maxItems": 100,
              "minItems": 1
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "FareRuleText"
          ]
        }
      ]
    },
    "FareRuleInfoStructured": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "FareRuleInfo"
      },
      "allOf": [
        {
          "$ref": "#/definitions/FareRuleInfo"
        },
        {
          "properties": {
            "Penalties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Penalties"
              },
              "maxItems": 10
            },
            "MinimumStay": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MinimumStay"
              },
              "maxItems": 10
            },
            "MaximumStay": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MaximumStay"
              },
              "maxItems": 10
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MinimumStay": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "MinimumStay"
      },
      "description": "Minimum Stay",
      "properties": {
        "value": {
          "type": "string"
        },
        "passengerTypeCodes": {
          "description": "Assigned Type: c-0400:PassengerTypeCodeList",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 5,
            "minLength": 3,
            "pattern": "([a-zA-Z0-9]{3,5})"
          }
        },
        "mustIncludeDayOfWeek": {
          "description": "This day of the week must be included as part of the minimum stay",
          "$ref": "#/definitions/DayOfWeekEnum"
        },
        "originDayOfWeek": {
          "description": "The rule applies to trips commencing on a specific day of a week",
          "$ref": "#/definitions/DayOfWeekEnum"
        },
        "returnTime": {
          "description": "Assigned Type: ota2:LocalTime",
          "type": "string",
          "pattern": "(([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)((:?)[0-5]\\d)?([\\.,]\\d+(?!:))?"
        },
        "indeterminateInd": {
          "description": "Structured fare rules could not be determined for this category",
          "type": "boolean"
        }
      }
    },
    "WaiverEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "WaiverEnum"
      },
      "description": "Type of Waiver like Death of Pessanger,illness Of Passenger, Death of Immediate Family Member  etc",
      "type": "string",
      "enum": [
        "DeathOfPassenger",
        "IllnessOfPassenger",
        "DeathOfImmediateFamilyMember",
        "IllnessOfImmediateFamilyMember",
        "TicketUpgrade",
        "ScheduleChange"
      ]
    },
    "PenaltyAppliesToEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "PenaltyAppliesToEnum"
      },
      "description": "Penalty applicable list",
      "type": "string",
      "enum": [
        "OneWay",
        "RoundTrip",
        "PerTicket",
        "PerCoupon",
        "PerDirectionOfTravel"
      ]
    },
    "MaximumStay": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "MaximumStay"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "passengerTypeCodes": {
          "description": "Assigned Type: c-0400:PassengerTypeCodeList",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 5,
            "minLength": 3,
            "pattern": "([a-zA-Z0-9]{3,5})"
          }
        },
        "maximumStayDuration": {
          "type": "string"
        },
        "maximumStayDate": {
          "type": "string",
          "format": "date"
        },
        "returnTime": {
          "description": "Assigned Type: ota2:LocalTime",
          "type": "string",
          "pattern": "(([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)((:?)[0-5]\\d)?([\\.,]\\d+(?!:))?"
        },
        "RuleApplies": {
          "description": "Assigned Type: ctar-0400:RuleAppliesEnum",
          "$ref": "#/definitions/RuleAppliesEnum"
        },
        "indeterminateInd": {
          "description": "Structured fare rules could not be determined for this category",
          "type": "boolean"
        },
        "mustCommenceByInd": {
          "description": "Indicates if travel must commence by this date\\/duration",
          "type": "boolean"
        },
        "mustCompleteByInd": {
          "description": "Indicates if travel must complete by this date\\/duration",
          "type": "boolean"
        },
        "fromDateOfIssueInd": {
          "description": "If true the Maximum stay is calculated from the date of ticket issuance",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RuleAppliesEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "RuleAppliesEnum"
      },
      "description": "Used when multiple maximumStayDuration and maximumStayDate are given and you must indicate which one applies. (max stay is 1 year or 15thDecember, the later of the two)",
      "type": "string",
      "enum": [
        "EarliestApplies",
        "LaterApplies"
      ]
    },
    "OrganizationIdentifier": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "OrganizationIdentifier"
      },
      "description": "The organization identifier",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "supplier": {
          "description": "Assigned Type: c-0400:AirlineCode",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ctar",
                "value": "AA"
              }
            ]
          },
          "type": "string",
          "pattern": "([a-zA-Z0-9]{2,3})"
        },
        "type": {
          "description": "The type od code.  Organization or account",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "ctar",
                "value": ""
              }
            ]
          },
          "$ref": "#/definitions/OrganizationCodeTypeEnum"
        }
      }
    },
    "OrganizationCodeTypeEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "OrganizationCodeTypeEnum"
      },
      "type": "string",
      "enum": [
        "Account",
        "Organization"
      ]
    },
    "ReferenceListTraveler": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "ReferenceList"
      },
      "description": "Used to create a list of referenced objects, example ReferenceListFlight, ReferenceListBrand",
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "Traveler": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TravelerID"
              },
              "maxItems": 100
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "AlternateContact": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "AlternateContact"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "contactType": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "relation": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "PersonName": {
          "description": "Assigned Type: c-0400:PersonName",
          "$ref": "#/definitions/PersonName"
        },
        "Address": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          },
          "maxItems": 3
        },
        "Telephone": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Telephone"
          },
          "maxItems": 5
        },
        "Email": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Email"
          },
          "maxItems": 5
        },
        "emergencyInd": {
          "description": "This is the contact in case of an emergency",
          "type": "boolean"
        },
        "defaultInd": {
          "description": "This is the default contact",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "PersonName"
      ],
      "discriminator": "@type"
    },
    "TravelerID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Traveler"
      },
      "description": "A person that is traveling",
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "TravelerRef": {
          "description": "A person that is traveling",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Traveler": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Traveler"
      },
      "description": "A person that is traveling",
      "allOf": [
        {
          "$ref": "#/definitions/TravelerID"
        },
        {
          "properties": {
            "dob": {
              "description": "Date of Birth",
              "type": "string",
              "format": "date"
            },
            "gender": {
              "description": "Gender",
              "$ref": "#/definitions/GenderEnum"
            },
            "passengerTypeCode": {
              "description": "Assigned Type: c-0400:PassengerTypeCode",
              "type": "string",
              "maxLength": 5,
              "minLength": 3,
              "pattern": "([a-zA-Z0-9]{3,5})"
            },
            "nationality": {
              "description": "Assigned Type: c-0400:CountryCodeISO",
              "type": "string",
              "pattern": "[a-zA-Z]{2}"
            },
            "PersonName": {
              "description": "Assigned Type: c-0400:PersonName",
              "$ref": "#/definitions/PersonName"
            },
            "Address": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Address"
              },
              "maxItems": 10
            },
            "Telephone": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Telephone"
              },
              "maxItems": 10
            },
            "Email": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Email"
              },
              "maxItems": 10
            },
            "CustomerLoyalty": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerLoyalty"
              },
              "maxItems": 10
            },
            "AlternateContact": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlternateContact"
              },
              "maxItems": 20
            },
            "TravelDocument": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TravelDocument"
              },
              "maxItems": 10
            },
            "Comments": {
              "description": "Assigned Type: c-0400:Comments",
              "$ref": "#/definitions/Comments"
            },
            "accompaniedByInfantInd": {
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "PersonName"
          ]
        }
      ]
    },
    "PersonDocument": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonDocument"
      },
      "description": "Unique number assigned by authorities to document.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "docNumber": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "docType": {
          "description": "Codes from OTA DOC - Document Type",
          "$ref": "#/definitions/DocTypeCodeEnum"
        },
        "issueDate": {
          "description": "Date of Issue",
          "type": "string",
          "format": "date"
        },
        "expireDate": {
          "description": "Date of expiration",
          "type": "string",
          "format": "date"
        },
        "stateProvCode": {
          "description": "Assigned Type: c-0400:StateProvCode",
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "issueCountry": {
          "description": "Assigned Type: c-0400:CountryCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "birthDate": {
          "description": "The date of birth of the document holder",
          "type": "string",
          "format": "date"
        },
        "birthCountry": {
          "description": "Assigned Type: c-0400:CountryCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "birthPlace": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "residence": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "Gender": {
          "description": "Assigned Type: c-0400:GenderEnum",
          "$ref": "#/definitions/GenderEnum"
        },
        "Nationality": {
          "description": "Specifies a 2 character country code as defined in ISO3166.",
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "PersonName": {
          "description": "Assigned Type: c-0400:PersonName",
          "$ref": "#/definitions/PersonName"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "docNumber",
        "Gender",
        "Nationality",
        "PersonName"
      ],
      "discriminator": "@type"
    },
    "TravelDocument": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonDocument"
      },
      "description": "Unique number assigned by authorities to document.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
          ]
        }
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "docNumber": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "docType": {
          "description": "Codes from OTA DOC - Document Type",
          "$ref": "#/definitions/DocTypeCodeEnum"
        },
        "issueDate": {
          "description": "Date of Issue",
          "type": "string",
          "format": "date"
        },
        "expireDate": {
          "description": "Date of expiration",
          "type": "string",
          "format": "date"
        },
        "stateProvCode": {
          "description": "Assigned Type: c-0400:StateProvCode",
          "type": "string",
          "maxLength": 8,
          "minLength": 2
        },
        "issueCountry": {
          "description": "Assigned Type: c-0400:CountryCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "birthDate": {
          "description": "The date of birth of the document holder",
          "type": "string",
          "format": "date"
        },
        "birthCountry": {
          "description": "Assigned Type: c-0400:CountryCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "birthPlace": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "residence": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "Gender": {
          "description": "Assigned Type: c-0400:GenderEnum",
          "$ref": "#/definitions/GenderEnum"
        },
        "Nationality": {
          "description": "Specifies a 2 character country code as defined in ISO3166.",
          "type": "string",
          "pattern": "[a-zA-Z]{2}"
        },
        "PersonName": {
          "description": "Assigned Type: c-0400:PersonName",
          "$ref": "#/definitions/PersonName"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "docNumber",
        "Gender",
        "Nationality",
        "PersonName"
      ],
      "discriminator": "@type"
    },
    "PersonDocumentDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonDocument"
      },
      "description": "Unique number assigned by authorities to document.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/PersonDocument"
        },
        {
          "properties": {
            "IssuedForGeoPoliticalArea": {
              "description": "Assigned Type: c-0400:GeoPoliticalArea",
              "$ref": "#/definitions/GeoPoliticalArea"
            },
            "Address": {
              "description": "Assigned Type: c-0400:Address",
              "$ref": "#/definitions/Address"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "TravelDocumentDetail": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "PersonDocument"
      },
      "description": "Unique number assigned by authorities to document.",
      "x-otm-annotations": {
        "documentation": {
          "implementers": [
            "Assigned XSD Type: {http:\\/\\/chameleon.anonymous\\/ns}StringLength1to32"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TravelDocument"
        },
        {
          "properties": {
            "IssuedForGeoPoliticalArea": {
              "description": "Assigned Type: c-0400:GeoPoliticalArea",
              "$ref": "#/definitions/GeoPoliticalArea"
            },
            "Address": {
              "description": "Assigned Type: c-0400:Address",
              "$ref": "#/definitions/Address"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "DocTypeCodeEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "DocTypeCodeEnum"
      },
      "description": "Codes from OTA DOC - Document Type",
      "type": "string",
      "enum": [
        "Visa",
        "Passport",
        "MilitaryIdentification",
        "DriversLicense",
        "NationalIdentityDocument",
        "VaccinationCertificate",
        "AlienRegistrationNumber",
        "InsurancePolicyNumber",
        "TaxExemptionNumber",
        "VehicleRegistrationLicenseNumber",
        "BoderCrossingCard",
        "RefugeeTravelDocument",
        "PilotsLicense",
        "PermanentResidentCard",
        "RedressNumber",
        "KnownTravelerNumber",
        "Non-Standard",
        "MerchantNumber",
        "AirNexusCard",
        "CrewMemberCertificate",
        "PassportCard",
        "NaturalizationCertificate",
        "TicketNumber"
      ]
    },
    "TravelerResponse": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BaseResponse"
      },
      "description": "Used as the Base Payload of a Response Action Facet",
      "properties": {
        "@type": {
          "type": "string"
        },
        "TravelerIdentifier": {
          "description": "Assigned Type: trav-0400:Traveler_ID",
          "$ref": "#/definitions/TravelerID"
        },
        "transactionId": {
          "description": "Unique transaction, correlation or tracking id for a single request and reply i.e. for a single transaction. Should be a 128 bit GUID format. Also know as E2ETrackingId.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c-0100",
                "value": "6570ed7b-89fe-4334-9c78-af282a977ba6"
              }
            ]
          },
          "type": "string"
        },
        "traceId": {
          "description": "Optional ID for internal child transactions created for processing a single request (single transaction). Should be a 128 bit GUID format. Also known as ChildTrackingId.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "examples": [
              {
                "context": "c-0100",
                "value": "c009a53c-48f6-4084-b7b6-3043fa9fec67"
              }
            ]
          },
          "type": "string"
        },
        "Result": {
          "description": "Assigned Type: c-0400:Result",
          "$ref": "#/definitions/Result"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "NextSteps": {
          "description": "Assigned Type: c-0400:NextSteps",
          "$ref": "#/definitions/NextSteps"
        },
        "ReferenceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceList"
          },
          "maxItems": 5
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TravelerListResponse": {
      "x-otm-entity": {
        "EntityType": "CoreObject",
        "EntityName": "BaseResponse"
      },
      "description": "Used as the Base Payload of a Response Action Facet",
      "properties": {
        "@type": {
          "type": "string"
        },
        "Traveler": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TravelerID"
          },
          "maxItems": 100
        },
        "transactionId": {
          "description": "Unique transaction, correlation or tracking id for a single request and reply i.e. for a single transaction. Should be a 128 bit GUID format. Also know as E2ETrackingId.",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c-0100",
                "value": "6570ed7b-89fe-4334-9c78-af282a977ba6"
              }
            ]
          },
          "type": "string"
        },
        "traceId": {
          "description": "Optional ID for internal child transactions created for processing a single request (single transaction). Should be a 128 bit GUID format. Also known as ChildTrackingId.",
          "x-otm-annotations": {
            "documentation": {
              "implementers": [
                "Assigned XSD Type: {http:\\/\\/www.w3.org\\/2001\\/XMLSchema}string"
              ]
            },
            "examples": [
              {
                "context": "c-0100",
                "value": "c009a53c-48f6-4084-b7b6-3043fa9fec67"
              }
            ]
          },
          "type": "string"
        },
        "Result": {
          "description": "Assigned Type: c-0400:Result",
          "$ref": "#/definitions/Result"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "NextSteps": {
          "description": "Assigned Type: c-0400:NextSteps",
          "$ref": "#/definitions/NextSteps"
        },
        "ReferenceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceList"
          },
          "maxItems": 5
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ProductSeatAvailability": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Product"
      },
      "description": "A product is any product, service or package of products and services  that can be priced and purchased by a specific supplier.",
      "allOf": [
        {
          "$ref": "#/definitions/Product"
        },
        {
          "properties": {
            "SeatAvailability": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SeatAvailability"
              },
              "maxItems": 10,
              "minItems": 1
            },
            "Brand": {
              "description": "Assigned Type: ctbr-0400:Brand",
              "$ref": "#/definitions/BrandID"
            },
            "ExtensionPoint_Custom": {
              "$ref": "#/definitions/ExtensionPoint_Custom"
            }
          },
          "required": [
            "SeatAvailability"
          ]
        }
      ]
    },
    "TermsAndConditionsAncillary": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "TermsAndConditions"
      },
      "description": "Terms And Conditions that apply to an offer",
      "allOf": [
        {
          "$ref": "#/definitions/TermsAndConditions"
        },
        {
          "properties": {
            "AncillaryRules": {
              "description": "Assigned Type: ctan-0400:AncillaryRules",
              "$ref": "#/definitions/AncillaryRulesID"
            },
            "Traveler": {
              "description": "Assigned Type: trav-0400:Traveler",
              "$ref": "#/definitions/TravelerID"
            },
            "ExtensionPoint_Custom": {
              "$ref": "#/definitions/ExtensionPoint_Custom"
            }
          }
        }
      ]
    },
    "ProductAncillary": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "Product"
      },
      "description": "A product is any product, service or package of products and services  that can be priced and purchased by a specific supplier.",
      "allOf": [
        {
          "$ref": "#/definitions/Product"
        },
        {
          "properties": {
            "Ancillary": {
              "description": "Assigned Type: ctan-0400:Ancillary",
              "$ref": "#/definitions/Ancillary"
            },
            "selectedByDefaultInd": {
              "type": "boolean"
            },
            "ExtensionPoint_Custom": {
              "$ref": "#/definitions/ExtensionPoint_Custom"
            }
          }
        }
      ]
    },
    "AncillaryDescription": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "AncillaryDescription"
      },
      "description": "A description of the ancillary with two description codes",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "codeContext": {
          "description": "Assigned Type: c-0400:CodesWithContext",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          }
        },
        "code1": {
          "description": "Assigned Type: c-0400:StringUpperCaseAlphaNumericMax10",
          "type": "string",
          "maxLength": 10,
          "pattern": "([A-Z0-9]+)?"
        },
        "code2": {
          "description": "Assigned Type: c-0400:StringUpperCaseAlphaNumericMax10",
          "type": "string",
          "maxLength": 10,
          "pattern": "([A-Z0-9]+)?"
        }
      }
    },
    "SeatAvailability": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "SeatAvailability"
      },
      "description": "The row, seat, and availability of the seat.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          }
        },
        "seatAvailabilityStatus": {
          "description": "The availabile status of the seat for that traveler.",
          "$ref": "#/definitions/SeatAvailability_Enum"
        },
        "codeContext": {
          "description": "Assigned Type: c-0400:CodeContext",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "AncillaryRulesID": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "AncillaryRules"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "AncillaryRules": {
      "x-otm-entity": {
        "EntityType": "BusinessObject",
        "EntityName": "AncillaryRules"
      },
      "allOf": [
        {
          "$ref": "#/definitions/AncillaryRulesID"
        },
        {
          "properties": {
            "ApplicationLevel": {
              "description": "Assigned Type: ctan-0400:ApplicationLevel",
              "$ref": "#/definitions/ApplicationLevel"
            },
            "ApplicationLimit": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationLimit"
              },
              "maxItems": 10,
              "minItems": 1
            },
            "Airline": {
              "description": "Assigned Type: c-0400:AirlineCodeWithContext",
              "$ref": "#/definitions/AirlineCodeWithContext"
            },
            "SecondaryCode": {
              "description": "Assigned Type: ctan-0400:SecondaryCode",
              "$ref": "#/definitions/SecondaryCode"
            },
            "requiredForAllTravelersInd": {
              "type": "boolean"
            },
            "unselectedOptionRequiredInd": {
              "type": "boolean"
            },
            "requiredForAllSegmentsInODInd": {
              "type": "boolean"
            },
            "requiredForAllSegmentsInd": {
              "type": "boolean"
            },
            "secondaryOptionCodeRequiredInd": {
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "ApplicationLevel",
            "ApplicationLimit",
            "SecondaryCode"
          ]
        }
      ]
    },
    "ApplicationLevel": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ApplicationLevel"
      },
      "properties": {
        "applicableLevel_Enum": {
          "$ref": "#/definitions/ApplicableLevelEnum"
        }
      }
    },
    "ApplicationLimit": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "ApplicationLimit"
      },
      "description": "2 digit number",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "applicableLevel_Enum": {
          "$ref": "#/definitions/ApplicableLevelEnum"
        }
      }
    },
    "SecondaryCode": {
      "x-otm-entity": {
        "EntityType": "ValueWithAttributes",
        "EntityName": "SecondaryCode"
      },
      "description": "Any code used to specify an item, for example a type of traveler, service code, room amenity, etc.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "secondaryOptionName": {
          "description": "Assigned Type: c-0400:StringLittle",
          "type": "string",
          "maxLength": 64
        },
        "codeContext": {
          "description": "Assigned Type: c-0400:CodeContext",
          "x-otm-annotations": {
            "examples": [
              {
                "context": "c",
                "value": "IATA"
              }
            ]
          },
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "ApplicableLevelEnum": {
      "x-otm-entity": {
        "EntityType": "EnumerationClosed",
        "EntityName": "ApplicableLevelEnum"
      },
      "type": "string",
      "enum": [
        "PassengerSegment",
        "Segment",
        "Itinerary",
        "Passengers",
        "PassengerOD",
        "Other"
      ]
    },
    "Ancillary": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Ancillary"
      },
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "Assigned Type: c-0400:NumberDoubleDigit",
          "type": "integer",
          "format": "int32"
        },
        "Description": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AncillaryDescription"
          },
          "maxItems": 10,
          "minItems": 1
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type",
        "Description"
      ],
      "discriminator": "@type"
    },
    "AncillaryAir": {
      "x-otm-entity": {
        "EntityType": "ChoiceObject",
        "EntityName": "Ancillary"
      },
      "allOf": [
        {
          "$ref": "#/definitions/Ancillary"
        },
        {
          "properties": {
            "FlightRef": {
              "description": "The list of travel segments the ancillary applies to",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ExtensionPoint": {},
    "ExtensionPoint_Summary": {},
    "ExtensionPoint_Detail": {},
    "ExtensionPoint_Custom": {},
    "ExtensionPoint_Query": {},
    "ExtensionPoint_Update": {},
    "ExtensionPoint_Shared": {},
    "ExtensionPoint_Choice": {}
  },
  "parameters": {
    "PseudoCityCode": {
      "name": "PseudoCityCode",
      "in": "header",
      "description": "Identifies the PCC for which the API is being called",
      "required": false,
      "type": "string"
    },
    "CoreAffinity": {
      "name": "CoreAffinity",
      "in": "header",
      "description": "Specified the Travelport core system (e.g. \u00271P\u0027, \u00271G\u0027) with which the PCC is affiliated.",
      "required": false,
      "type": "string"
    }
  }
}