{
  "swagger": "2.0",
  "info": {
    "title": "CatalogOfferingsResource",
    "version": "4.0.0"
  },
  "host": "127.0.0.1",
  "basePath": "/v4_0",
  "schemes": [
    "http"
  ],
  "paths": {
    "/catalogofferings/airchange": {
      "post": {
        "summary": "CatalogOfferingsResource - CreateAirChange",
        "operationId": "CreateAirChange",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "The view.  Either detail or summary.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sccType",
            "in": "query",
            "description": "This is used to override specific rulesTypes set in search control console.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sccChannelID",
            "in": "query",
            "description": "Search Control Console Channel ID allows the user to allocate a customized set of search parameters to their query",
            "required": false,
            "type": "string"
          },
          {
            "name": "upsellInd",
            "in": "query",
            "description": "If true one upsell will be returned in the response. If not passed will default to false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "asynchInd",
            "in": "query",
            "description": "If true the catalogOfferings results will be returned asynchronously. Determined by amount of results or time response.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "CatalogOfferingsQueryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogOfferingsQueryRequest"
            }
          },
          {
            "$ref": "#/parameters/E2ETrackingId"
          },
          {
            "$ref": "#/parameters/XAUTH_TRAVELPORT_ACCESSGROUP"
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogOfferingsResponse"
            }
          }
        }
      }
    },
    "/catalogofferings/buildoptionsfromcatalogproducts": {
      "post": {
        "summary": "CatalogOfferingsResource - BuildOptionsFromProducts",
        "operationId": "BuildOptionsFromProducts",
        "consumes": [
          "application/xml",
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "CatalogOfferingsQueryBuildOptionsFromProducts",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogOfferingsQueryBuildOptionsFromProducts"
            }
          },
          {
            "$ref": "#/parameters/E2ETrackingId"
          },
          {
            "$ref": "#/parameters/XAUTH_TRAVELPORT_ACCESSGROUP"
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogOfferingsResponse"
            }
          }
        }
      }
    },
    "/catalogofferings/buildoptionsfromcatalogofferings": {
      "post": {
        "summary": "CatalogOfferingsResource - BuildOptionsFromCatalogOfferings",
        "description": "Build a subset of CatalogOfferings for branding",
        "operationId": "BuildOptionsFromCatalogOfferings",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "CatalogOfferingsQueryBuildOptionsFromCatalogOfferings",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogOfferingsQueryBuildOptionsFromCatalogOfferings"
            }
          },
          {
            "$ref": "#/parameters/E2ETrackingId"
          },
          {
            "$ref": "#/parameters/XAUTH_TRAVELPORT_ACCESSGROUP"
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogOfferingsResponse"
            }
          }
        }
      }
    },
    "/catalogofferings": {
      "get": {
        "summary": "CatalogOfferingsResource - Get",
        "operationId": "Get",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "query",
            "description": "The Identifier of the CatalogOfferings from which a page is to be returned",
            "required": false,
            "type": "string",
            "maxLength": 128
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "The page number to be returned",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "in": "query",
            "description": "The view.  Either detail or summary.",
            "required": false,
            "type": "string"
          },
          {
            "name": "upsellInd",
            "in": "query",
            "description": "if true response will include CatalogOffering plus one upsell (next higher fare)",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/E2ETrackingId"
          },
          {
            "$ref": "#/parameters/XAUTH_TRAVELPORT_ACCESSGROUP"
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogOfferingsResponse"
            }
          }
        }
      },
      "post": {
        "summary": "CatalogOfferingsResource - Create",
        "operationId": "Create",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "The view.  Either detail or summary.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sccType",
            "in": "query",
            "description": "This is used to override specific rulesTypes set in search control console.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sccChannelID",
            "in": "query",
            "description": "Search Control Console Channel ID allows the user to allocate a customized set of search parameters to their query",
            "required": false,
            "type": "string"
          },
          {
            "name": "upsellInd",
            "in": "query",
            "description": "If true one upsell will be returned in the response. If not passed will default to false.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "asynchInd",
            "in": "query",
            "description": "If true the catalogOfferings results will be returned asynchronously. Determined by amount of results or time response.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "CatalogOfferingsQueryRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogOfferingsQueryRequest"
            }
          },
          {
            "$ref": "#/parameters/E2ETrackingId"
          },
          {
            "$ref": "#/parameters/XAUTH_TRAVELPORT_ACCESSGROUP"
          }
        ],
        "responses": {
          "400": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "402": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogOfferingsResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "transactionId": {
          "description": "Unique transaction, correlation or tracking id for a single request and reply i.e. for a single transaction. Should be a 128 bit GUID format. Also know as E2ETrackingId.",
          "type": "string"
        },
        "traceId": {
          "description": "Optional ID for internal child transactions created for processing a single request (single transaction). Should be a 128 bit GUID format. Also known as ChildTrackingId.",
          "type": "string"
        },
        "Result": {
          "description": "Assigned Type: c-0400:Result",
          "$ref": "#/definitions/Result"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "NextSteps": {
          "description": "Assigned Type: c-0400:NextSteps",
          "$ref": "#/definitions/NextSteps"
        },
        "ReferenceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceList"
          },
          "maxItems": 5
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferenceList": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Uniquely identifies for the Reference List",
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ReferenceListTextBlock": {
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "TextBlock": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TextBlock"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "PriceBreakdown": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "Amount": {
          "description": "Assigned Type: c-0400:Amount",
          "$ref": "#/definitions/Amount"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CatalogOfferingsResponse": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "CatalogOfferings": {
          "description": "Assigned Type: ctlg-0400:CatalogOfferings",
          "$ref": "#/definitions/CatalogOfferingsID"
        },
        "transactionId": {
          "description": "Unique transaction, correlation or tracking id for a single request and reply i.e. for a single transaction. Should be a 128 bit GUID format. Also know as E2ETrackingId.",
          "type": "string"
        },
        "traceId": {
          "description": "Optional ID for internal child transactions created for processing a single request (single transaction). Should be a 128 bit GUID format. Also known as ChildTrackingId.",
          "type": "string"
        },
        "Result": {
          "description": "Assigned Type: c-0400:Result",
          "$ref": "#/definitions/Result"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "NextSteps": {
          "description": "Assigned Type: c-0400:NextSteps",
          "$ref": "#/definitions/NextSteps"
        },
        "ReferenceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceList"
          },
          "maxItems": 5
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "CatalogOfferings"
      ],
      "discriminator": "@type"
    },
    "ReferenceListProduct": {
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "Product": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductID"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ReferenceListTermsAndConditions": {
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "TermsAndConditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TermsAndConditionsID"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "TermsAndConditionsID": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "termsAndConditionsRef": {
          "description": "Used to reference another instance of this object in the same message.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TermsAndConditions": {
      "allOf": [
        {
          "$ref": "#/definitions/TermsAndConditionsID"
        },
        {
          "properties": {
            "ExpiryDate": {
              "description": "The data and time range that the Offer is valid.",
              "type": "string",
              "format": "date-time"
            },
            "ExtensionPoint_Summary": {
              "$ref": "#/definitions/ExtensionPoint_Summary"
            }
          }
        }
      ]
    },
    "ProductID": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "productRef": {
          "description": "Used to reference another instance of this object in the same message",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Product": {
      "allOf": [
        {
          "$ref": "#/definitions/ProductID"
        },
        {
          "properties": {
            "Quantity": {
              "description": "The number of products dependent on context",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "ExtensionPoint_Summary": {
              "$ref": "#/definitions/ExtensionPoint_Summary"
            }
          }
        }
      ]
    },
    "CatalogOfferingID": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "CatalogOfferingRef": {
          "description": "Used to reference another instance of this object in the same message",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CatalogOffering": {
      "allOf": [
        {
          "$ref": "#/definitions/CatalogOfferingID"
        },
        {
          "properties": {
            "ProductOptions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductOptionsID"
              },
              "maxItems": 10,
              "minItems": 1
            },
            "Price": {
              "description": "Assigned Type: c-0400:Price",
              "$ref": "#/definitions/Price"
            },
            "TermsAndConditions": {
              "description": "Assigned Type: ctlg-0400:TermsAndConditions",
              "$ref": "#/definitions/TermsAndConditionsID"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "ProductOptions",
            "Price"
          ]
        }
      ]
    },
    "ProductOptionsID": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        },
        "ProductOptionsRef": {
          "description": "Used to reference another instance of this object in the same message",
          "type": "string"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "ProductOptions": {
      "allOf": [
        {
          "$ref": "#/definitions/ProductOptionsID"
        },
        {
          "properties": {
            "sequence": {
              "description": "Assigned Type: c-0400:NonnegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "Product": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductID"
              },
              "maxItems": 1000,
              "minItems": 1
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "Product"
          ]
        }
      ]
    },
    "CatalogOfferingsID": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CatalogOfferings": {
      "allOf": [
        {
          "$ref": "#/definitions/CatalogOfferingsID"
        },
        {
          "properties": {
            "DefaultCurrency": {
              "description": "Assigned Type: c-0400:Currency",
              "$ref": "#/definitions/Currency"
            },
            "CatalogOffering": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CatalogOfferingID"
              },
              "minItems": 1
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "CatalogOffering"
          ]
        }
      ]
    },
    "CatalogOfferingsQueryPage": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "identifier": {
          "description": "Assigned Type: c-0400:GUID",
          "type": "string",
          "maxLength": 128
        },
        "pageNumber": {
          "description": "The page number to be returned",
          "type": "string"
        },
        "view": {
          "description": "The view.  Either detail or summary.",
          "type": "string"
        },
        "upsellInd": {
          "description": "if true response will include CatalogOffering plus one upsell (next higher fare)",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CatalogOfferingsQueryRequest": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "CatalogOfferingsRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogOfferingsRequest"
          },
          "maxItems": 5,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "CatalogOfferingsRequest"
      ],
      "discriminator": "@type"
    },
    "CatalogOfferingsQueryRequestQueryParameters": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "view": {
          "description": "The view.  Either detail or summary.",
          "type": "string"
        },
        "sccType": {
          "description": "This is used to override specific rulesTypes set in search control console.",
          "type": "string"
        },
        "sccChannelID": {
          "description": "Search Control Console Channel ID allows the user to allocate a customized set of search parameters to their query",
          "type": "string"
        },
        "upsellInd": {
          "description": "If true one upsell will be returned in the response. If not passed will default to false.",
          "type": "boolean"
        },
        "asynchInd": {
          "description": "If true the catalogOfferings results will be returned asynchronously. Determined by amount of results or time response.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CatalogOfferingsRequest": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BuildFromProductsRequest": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BuildFromCatalogOfferingsRequest": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "CatalogOfferingsIdentifier": {
          "description": "Assigned Type: ctlg-0400:CatalogOfferings_ID",
          "$ref": "#/definitions/CatalogOfferingsID"
        },
        "CatalogOfferingIdentifier": {
          "description": "Assigned Type: ctlg-0400:CatalogOffering_ID",
          "$ref": "#/definitions/CatalogOfferingID"
        },
        "ProductIdentifier": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductID"
          },
          "maxItems": 10,
          "minItems": 1
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type",
        "CatalogOfferingsIdentifier",
        "CatalogOfferingIdentifier",
        "ProductIdentifier"
      ],
      "discriminator": "@type"
    },
    "FareRulesEnum": {
      "type": "string",
      "enum": [
        "TextShort",
        "TextLong",
        "Structured"
      ]
    },
    "PaymentCriteria": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "IssuerIdentificationNumber": {
          "description": "This the BIN\\/IIN",
          "type": "string",
          "maxLength": 32,
          "pattern": "[0-9]{6,9}"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Amount": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "currencySource": {
          "description": "Source of the selection of this currenct",
          "$ref": "#/definitions/CurrencySourceEnum"
        },
        "currencyCode": {
          "description": "Assigned Type: c-0400:CurrencyCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "Base": {
          "description": "The price prior to all applicable taxes of a product such as the rate for a room or fare for a flight.",
          "type": "number",
          "format": "float"
        },
        "Taxes": {
          "description": "Assigned Type: c-0400:Taxes",
          "$ref": "#/definitions/Taxes"
        },
        "Fees": {
          "description": "Assigned Type: c-0400:Fees",
          "$ref": "#/definitions/Fees"
        },
        "Total": {
          "description": "Specifies the total price including base + taxes + fees",
          "type": "number",
          "format": "float"
        },
        "approximateInd": {
          "description": "True if this amount has been converted from the original amount",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "Total"
      ],
      "discriminator": "@type"
    },
    "Currency": {
      "description": "The default currency that will apply to all prices, amounts, fares, etc. in a message.  It is placed at the top of any message using this object.",
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "code": {
          "description": "Assigned Type: c-0400:CurrencyCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        }
      },
      "required": [
        "code"
      ]
    },
    "CurrencyAmount": {
      "description": "A monetary amount, up to 4 decimal places. Decimal place needs to be included.",
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "code": {
          "description": "Assigned Type: c-0400:CurrencyCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "minorUnit": {
          "description": "Assigned Type: c-0400:CurrencyMinorUnit",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false,
          "pattern": "([0-4])"
        },
        "currencySource": {
          "description": "The origin of the requested currency code",
          "$ref": "#/definitions/CurrencySourceEnum"
        },
        "approximateInd": {
          "description": "True if the currency amount has been converted from the original amount",
          "type": "boolean"
        }
      }
    },
    "CustomerLoyalty": {
      "description": "Specifies the ID for the membership program.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 1000,
          "minLength": 1
        },
        "id": {
          "description": "Customer Loyality Id",
          "type": "string"
        },
        "priority": {
          "description": "Assigned Type: c-0400:Priority",
          "type": "integer",
          "format": "int32",
          "maximum": 300,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "programId": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "programName": {
          "description": "Assigned Type: c-0400:LoyaltyProgramName",
          "type": "string",
          "maxLength": 128
        },
        "supplierType": {
          "description": "Assigned Type: c-0400:LoyaltySupplierType",
          "type": "string",
          "maxLength": 32
        },
        "supplier": {
          "description": "Assigned Type: c-0400:LoyaltySupplier",
          "type": "string",
          "maxLength": 128
        },
        "tier": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "shareWithSupplier": {
          "description": "Assigned Type: c-0400:TinyStrings",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          }
        },
        "cardHolderName": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "validatedInd": {
          "description": "Customer loyalty number has been validated by the supplier",
          "type": "boolean"
        }
      }
    },
    "DateCreateModify": {
      "description": "Time stamp of the creation.",
      "properties": {
        "value": {
          "type": "string",
          "format": "date-time"
        },
        "creatorID": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "lastModify": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierID": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "purge": {
          "description": "Date an item will be purged from a system of record",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ErrorWarning": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "StatusCode": {
          "description": "Http standard response code",
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "description": "TODO - \\nTravelport standardized error\\/warning text. May contain parameters, and include which specific part of the request did not work and why. Get standardized message list, with parameters if appropriate, from ?????????????????????",
          "type": "string",
          "maxLength": 4096
        },
        "NameValuePair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "maxItems": 100
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "StatusCode"
      ],
      "discriminator": "@type"
    },
    "Error": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "StatusCode": {
          "description": "Http standard response code",
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "description": "TODO - \\nTravelport standardized error\\/warning text. May contain parameters, and include which specific part of the request did not work and why. Get standardized message list, with parameters if appropriate, from ?????????????????????",
          "type": "string",
          "maxLength": 4096
        },
        "NameValuePair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "maxItems": 100
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "StatusCode"
      ],
      "discriminator": "@type"
    },
    "Warning": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "StatusCode": {
          "description": "Http standard response code",
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "description": "TODO - \\nTravelport standardized error\\/warning text. May contain parameters, and include which specific part of the request did not work and why. Get standardized message list, with parameters if appropriate, from ?????????????????????",
          "type": "string",
          "maxLength": 4096
        },
        "NameValuePair": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          },
          "maxItems": 100
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "StatusCode"
      ],
      "discriminator": "@type"
    },
    "ErrorWarningDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/ErrorWarning"
        },
        {
          "properties": {
            "SourceID": {
              "description": "Travelport assigned source host or core identifier",
              "type": "string",
              "maxLength": 128
            },
            "SourceCode": {
              "description": "The error or warning code returned by the core\\/host system",
              "type": "string",
              "maxLength": 32
            },
            "SourceDescription": {
              "description": "The error message as it is returned from the originating core\\/host system",
              "type": "string",
              "maxLength": 4096
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "SourceID"
          ]
        }
      ]
    },
    "ErrorDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Error"
        },
        {
          "properties": {
            "SourceID": {
              "description": "Travelport assigned source host or core identifier",
              "type": "string",
              "maxLength": 128
            },
            "SourceCode": {
              "description": "The error or warning code returned by the core\\/host system",
              "type": "string",
              "maxLength": 32
            },
            "SourceDescription": {
              "description": "The error message as it is returned from the originating core\\/host system",
              "type": "string",
              "maxLength": 4096
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "SourceID"
          ]
        }
      ]
    },
    "WarningDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Warning"
        },
        {
          "properties": {
            "SourceID": {
              "description": "Travelport assigned source host or core identifier",
              "type": "string",
              "maxLength": 128
            },
            "SourceCode": {
              "description": "The error or warning code returned by the core\\/host system",
              "type": "string",
              "maxLength": 32
            },
            "SourceDescription": {
              "description": "The error message as it is returned from the originating core\\/host system",
              "type": "string",
              "maxLength": 4096
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "SourceID"
          ]
        }
      ]
    },
    "Fee": {
      "description": "The fee amount with feecode and reporting informtion",
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "currencyCode": {
          "description": "Assigned Type: c-0400:CurrencyCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "feeCode": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "reportingAuthority": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "purpose": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "description": {
          "description": "Assigned Type: c-0400:StringLong",
          "type": "string",
          "maxLength": 4096
        }
      }
    },
    "Fees": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "TotalFees": {
          "description": "A monetary amount, up to 4 decimal places. Decimal place needs to be included.",
          "type": "number",
          "format": "float"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FeesDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Fees"
        },
        {
          "properties": {
            "Fee": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Fee"
              },
              "maxItems": 100
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "Identifier": {
      "description": "Identifier provides the ability to create a globally unique identifier. For the identifier to be globally unique it must have a system provided identifier and the system must be identified using a global naming authority. System identification uses the domain naming system (DNS) to assure they are globally unique and should be an URL. The system provided ID will typically be a primary or surrogate key in a database.\\n\\nThe URL, system and company attributes can be omitted only when the system context can be implied by a parent or ancestor element.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 128
        },
        "authority": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        }
      }
    },
    "Image": {
      "description": "Image Details",
      "properties": {
        "value": {
          "type": "string"
        },
        "height": {
          "description": "The number of pixels on the vertical edge of the image.",
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "description": "The number of pixels on the horizontal edge of the image.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Measurement": {
      "description": "Used for dimensional units (width, height, depth) or weight",
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "type": {
          "description": "The type of measurement, such as width, height, weight",
          "$ref": "#/definitions/MeasurementTypeEnum"
        },
        "unit": {
          "description": "The unit that applies to the amount, such as feet, meters, pounds",
          "$ref": "#/definitions/UnitOfMeasureEnum"
        }
      }
    },
    "NameValuePair": {
      "description": "Used for data stored in Name\\/Value pairs",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Optional internally referenced id",
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        }
      },
      "required": [
        "name"
      ]
    },
    "NextStep": {
      "description": "A URL that describes a step that can be applied to the resource containing the next step structure.",
      "properties": {
        "value": {
          "type": "string"
        },
        "id": {
          "description": "Identifier for the Next Step",
          "type": "string"
        },
        "action": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "method": {
          "description": "possible action that can be performed on the returned results",
          "$ref": "#/definitions/NextStepMethodEnum"
        },
        "description": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        }
      },
      "required": [
        "action",
        "method"
      ]
    },
    "NextSteps": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "baseURI": {
          "description": "The base portion of the uri in order to shorten the uri\u0027s in the individual steps",
          "type": "string"
        },
        "id": {
          "description": "Optional internally referenced id",
          "type": "string"
        },
        "NextStep": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NextStep"
          },
          "maxItems": 20,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "baseURI",
        "NextStep"
      ],
      "discriminator": "@type"
    },
    "PseudoCityInfo": {
      "description": "a pseudo city information contains the details about the corporate user of a computer reservation system (CRS) or global distribution system (GDS), typically a travel agency.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 10,
          "minLength": 2,
          "pattern": "([a-zA-Z0-9]{2,10})"
        },
        "providerCode": {
          "description": "Assigned Type: c-0400:SupplierCode",
          "type": "string",
          "maxLength": 5,
          "minLength": 2,
          "pattern": "([a-zA-Z0-9]{2,5})"
        }
      },
      "required": [
        "providerCode"
      ]
    },
    "Result": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "status": {
          "description": "Indication of the processing status of the response message",
          "$ref": "#/definitions/ResultStatusEnum"
        },
        "Error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "maxItems": 50
        },
        "Warning": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Warning"
          },
          "maxItems": 100
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Tax": {
      "description": "The tax amount with tax code and reporting informtion",
      "properties": {
        "value": {
          "type": "number",
          "format": "float"
        },
        "currencyCode": {
          "description": "Assigned Type: c-0400:CurrencyCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "taxCode": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "reportingAuthority": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "purpose": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "description": {
          "description": "Assigned Type: c-0400:StringLong",
          "type": "string",
          "maxLength": 4096
        }
      }
    },
    "Taxes": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "TotalTaxes": {
          "description": "A monetary amount, up to 4 decimal places. Decimal place needs to be included.",
          "type": "number",
          "format": "float"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "TaxesDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Taxes"
        },
        {
          "properties": {
            "Tax": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tax"
              },
              "maxItems": 100
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "TextBlock": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "BrandText": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "target": {
          "description": "The audience targeted for the brand information",
          "$ref": "#/definitions/BrandTargetEnum"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "RateDescription": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "TermsAndConditionsSubCategory": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "BrandFeatureText": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "title": {
          "description": "Assigned Type: c-0400:String",
          "type": "string",
          "maxLength": 512
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "TextBlockDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/TextBlock"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "BrandTextDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/BrandText"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "RateDescriptionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/RateDescription"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "TermsAndConditionsSubCategoryDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/TermsAndConditionsSubCategory"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "BrandFeatureTextDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/BrandFeatureText"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "TextFormatted": {
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "language": {
          "description": "The language in which the text is provided.",
          "type": "string"
        },
        "textFormat": {
          "description": "Indicates the format of text used in the description e.g. plain text or html.",
          "$ref": "#/definitions/TextFormatEnum"
        }
      }
    },
    "Price": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "currencyCode": {
          "description": "Assigned Type: c-0400:CurrencyCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "Base": {
          "description": "The total amount not including taxes and\\/or fees",
          "type": "number",
          "format": "float"
        },
        "TotalTaxes": {
          "description": "The total of the taxes included in the total price",
          "type": "number",
          "format": "float"
        },
        "TotalFees": {
          "description": "The total of the fees included in the total price",
          "type": "number",
          "format": "float"
        },
        "TotalPrice": {
          "description": "The total price of the product in the currency indicated",
          "type": "number",
          "format": "float"
        },
        "VendorCurrencyTotal": {
          "description": "Assigned Type: c-0400:VendorCurrencyAmount",
          "$ref": "#/definitions/VendorCurrencyAmount"
        },
        "exchangeInd": {
          "description": "If exchangeInd is true then the price is as a result of an exchange",
          "type": "boolean"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PriceDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Price"
        },
        {
          "properties": {
            "PriceBreakdown": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PriceBreakdown"
              },
              "maxItems": 10
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "VendorCurrencyAmount": {
      "description": "Use only when the vendor currency is different than the requested currency.",
      "properties": {
        "amount": {
          "description": "Vendor Currency Amount",
          "type": "number",
          "format": "float"
        },
        "currencyCode": {
          "description": "Assigned Type: c-0400:CurrencyCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        }
      }
    },
    "CityOrAirportEnum": {
      "description": "Clarification of how the airport or city code is used",
      "type": "string",
      "enum": [
        "Airport Only",
        "City or Airport",
        "City Only",
        "Use Default"
      ]
    },
    "CurrencySourceEnum": {
      "description": "The system requesting or returning the currency code specified in the attribute",
      "type": "string",
      "enum": [
        "Supplier",
        "Charged",
        "Requested"
      ]
    },
    "DayOfWeekEnum": {
      "description": "The names of the days of the week.",
      "type": "string",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ]
    },
    "FaresFilterEnum": {
      "description": "REVIEW: Defines the type of fares to return (Only public fares, Only private fares, Only agency private fares, Only\\n                airline private fares or all fares)",
      "type": "string",
      "enum": [
        "PublicFaresOnly",
        "PrivateFaresOnly",
        "AgencyPrivateFaresOnly",
        "AirlinePrivateFaresOnly",
        "PublicAndPrivateFares",
        "NetFaresOnly",
        "AllFares"
      ]
    },
    "FareTypeEnum": {
      "description": "Defines the type of fares to return (Only public fares, Only private fares, Only agency private fares, Only\\n airline private fares or all fares)",
      "type": "string",
      "enum": [
        "PublicFare",
        "AgencyPrivateFare",
        "AirlinePrivateFare",
        "NetFare"
      ]
    },
    "MeasurementTypeEnum": {
      "description": "The type of measurement such as width, height, weight",
      "type": "string",
      "enum": [
        "Width",
        "Height",
        "Depth",
        "Weight",
        "OverallDimension"
      ]
    },
    "NextStepMethodEnum": {
      "description": "Describes the set of potential methods that can be taken after an operation.",
      "type": "string",
      "enum": [
        "GET",
        "DELETE",
        "PUT",
        "POST"
      ]
    },
    "ResultStatusEnum": {
      "description": "The status of an error or warning",
      "type": "string",
      "enum": [
        "Not processed",
        "Incomplete",
        "Complete",
        "Unknown"
      ]
    },
    "TextFormatEnum": {
      "description": "Describes the format of text such as plain text or html",
      "type": "string",
      "enum": [
        "PlainText",
        "HTML"
      ]
    },
    "UnitOfMeasureEnum": {
      "description": "The unit of measure in a code format. Refer to OpenTravel Code List Unit of Measure Code (UOM).",
      "type": "string",
      "enum": [
        "Miles",
        "Kilometers",
        "Meters",
        "Millimeters",
        "Centimeters",
        "Yards",
        "Feet",
        "Inches",
        "Pixels",
        "Block",
        "Megabytes",
        "Gigabytes",
        "Square feet",
        "Square meters",
        "Pounds",
        "Kilograms",
        "Square inch",
        "Square yard",
        "Acre",
        "Square millimeter",
        "Square centimeter",
        "Hectare",
        "Ounce",
        "Gram",
        "Gallons",
        "Liters",
        "Kilowatts",
        "Cubic meters"
      ]
    },
    "TermsAndConditionsAir": {
      "allOf": [
        {
          "$ref": "#/definitions/TermsAndConditions"
        },
        {
          "properties": {
            "validatingCarrier": {
              "description": "Assigned Type: c-0400:AirlineCode",
              "type": "string",
              "pattern": "([a-zA-Z0-9]{2,3})"
            },
            "BaggageAllowance": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BaggageAllowance"
              },
              "maxItems": 99
            },
            "FareRuleInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FareRuleInfo"
              },
              "maxItems": 50
            },
            "Restriction": {
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 128
              },
              "maxItems": 10
            },
            "OrganizationIdentifier": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrganizationIdentifier"
              },
              "maxItems": 10
            },
            "ExtensionPoint_Custom": {
              "$ref": "#/definitions/ExtensionPoint_Custom"
            }
          }
        }
      ]
    },
    "PriceBreakdownAir": {
      "allOf": [
        {
          "$ref": "#/definitions/PriceBreakdown"
        },
        {
          "properties": {
            "quantity": {
              "description": "Assigned Type: c-0400:NumberDoubleDigit",
              "type": "integer",
              "format": "int32"
            },
            "requestedPassengerType": {
              "description": "Assigned Type: c-0400:PassengerTypeCode",
              "type": "string",
              "maxLength": 5,
              "minLength": 3,
              "pattern": "([a-zA-Z0-9]{3,5})"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ProductAir": {
      "allOf": [
        {
          "$ref": "#/definitions/Product"
        },
        {
          "properties": {
            "totalDuration": {
              "description": "Total duration of all Segments that are part of this ProductAir",
              "type": "string"
            },
            "FlightSegment": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FlightSegment"
              },
              "maxItems": 99,
              "minItems": 1
            },
            "PassengerFlight": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PassengerFlight"
              },
              "maxItems": 10,
              "minItems": 1
            },
            "ExtensionPoint_Custom": {
              "$ref": "#/definitions/ExtensionPoint_Custom"
            }
          },
          "required": [
            "FlightSegment",
            "PassengerFlight"
          ]
        }
      ]
    },
    "ReferenceListFlight": {
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "Flight": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FlightID"
              },
              "minItems": 1
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "Flight"
          ]
        }
      ]
    },
    "CatalogOfferingsRequestAir": {
      "allOf": [
        {
          "$ref": "#/definitions/CatalogOfferingsRequest"
        },
        {
          "properties": {
            "maxNumberOfOffersToReturn": {
              "description": "Assigned Type: c-0400:NonnegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "offersPerPage": {
              "description": "Assigned Type: c-0400:NonnegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "contentSourceList": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentSourceEnum"
              }
            },
            "PassengerCriteria": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PassengerCriteria"
              },
              "maxItems": 10,
              "minItems": 1
            },
            "SearchCriteriaFlight": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchCriteriaFlight"
              },
              "maxItems": 20,
              "minItems": 1
            },
            "SearchModifiersAir": {
              "description": "Assigned Type: ctar-0400:SearchModifiersAir",
              "$ref": "#/definitions/SearchModifiersAir"
            },
            "PricingModifiersAir": {
              "description": "Assigned Type: ctar-0400:PricingModifiersAir",
              "$ref": "#/definitions/PricingModifiersAir"
            },
            "PseudoCityInfo": {
              "description": "Assigned Type: c-0400:PseudoCityInfo",
              "$ref": "#/definitions/PseudoCityInfo"
            },
            "returnBrandedFaresInd": {
              "description": "If present and true, branded fares are returned",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "PassengerCriteria",
            "SearchCriteriaFlight"
          ]
        }
      ]
    },
    "BuildFromProductsRequestAir": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildFromProductsRequest"
        },
        {
          "properties": {
            "PricingModifiersAir": {
              "description": "Assigned Type: ctar-0400:PricingModifiersAir",
              "$ref": "#/definitions/PricingModifiersAir"
            },
            "PassengerCriteria": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PassengerCriteria"
              },
              "maxItems": 10,
              "minItems": 1
            },
            "ProductCriteriaAir": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductCriteriaAir"
              },
              "maxItems": 10
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "PricingModifiersAir",
            "PassengerCriteria"
          ]
        }
      ]
    },
    "BuildFromCatalogOfferingsRequestAir": {
      "allOf": [
        {
          "$ref": "#/definitions/BuildFromCatalogOfferingsRequest"
        },
        {
          "properties": {
            "PricingModifiersAir": {
              "description": "Assigned Type: ctar-0400:PricingModifiersAir",
              "$ref": "#/definitions/PricingModifiersAir"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "CatalogOfferingsRequestAirChange": {
      "allOf": [
        {
          "$ref": "#/definitions/CatalogOfferingsRequest"
        },
        {
          "properties": {
            "maxNumberOfOffersToReturn": {
              "description": "Assigned Type: c-0400:NonnegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "offersPerPage": {
              "description": "Assigned Type: c-0400:NonnegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "SearchCriteriaFlightChange": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchCriteriaFlightChange"
              },
              "maxItems": 20,
              "minItems": 1
            },
            "PassengerCriteria": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PassengerCriteria"
              },
              "maxItems": 10,
              "minItems": 1
            },
            "TicketNumber": {
              "description": "Assigned Type: c-0400:Identifier",
              "$ref": "#/definitions/Identifier"
            },
            "returnBrandedFaresInd": {
              "description": "If present and true, branded fares are returned",
              "type": "boolean"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "SearchCriteriaFlightChange",
            "PassengerCriteria",
            "TicketNumber"
          ]
        }
      ]
    },
    "CatalogOfferingsQueryBuildOptionsFromCatalogOfferings": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "fareRuleType": {
          "description": "Fare rule type to use when creating this offer.",
          "$ref": "#/definitions/FareRulesEnum"
        },
        "BuildFromCatalogOfferingsRequest": {
          "description": "Assigned Type: ctlg-0400:BuildFromCatalogOfferingsRequest",
          "$ref": "#/definitions/BuildFromCatalogOfferingsRequest"
        },
        "FareRuleCategory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FareRuleCategoryEnum"
          },
          "maxItems": 8
        },
        "PaymentCriteria": {
          "description": "Assigned Type: ctlg-0400:PaymentCriteria",
          "$ref": "#/definitions/PaymentCriteria"
        },
        "returnBrandedFaresInd": {
          "description": "If present and true , branded fares are returned",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CatalogOfferingsQueryBuildOptionsFromProducts": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "fareRuleType": {
          "description": "Fare rule type to use when creating this offer.",
          "$ref": "#/definitions/FareRulesEnum"
        },
        "BuildFromProductsRequest": {
          "description": "Assigned Type: ctlg-0400:BuildFromProductsRequest",
          "$ref": "#/definitions/BuildFromProductsRequest"
        },
        "FareRuleCategory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FareRuleCategoryEnum"
          },
          "maxItems": 8
        },
        "PaymentCriteria": {
          "description": "Assigned Type: ctlg-0400:PaymentCriteria",
          "$ref": "#/definitions/PaymentCriteria"
        },
        "returnBrandedFaresInd": {
          "description": "If present and true , branded fares are returned",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PassengerFlight": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "passengerQuantity": {
          "description": "Number of passengers of the specified passenger type code",
          "type": "integer",
          "format": "int32"
        },
        "passengerTypeCode": {
          "description": "Assigned Type: c-0400:PassengerTypeCode",
          "type": "string",
          "maxLength": 5,
          "minLength": 3,
          "pattern": "([a-zA-Z0-9]{3,5})"
        },
        "FlightProduct": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FlightProduct"
          },
          "maxItems": 99
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FlightProduct": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "segmentSequence": {
          "description": "Assigned Type: ctar-0400:SegmentSequenceList",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "classOfService": {
          "description": "Assigned Type: c-0400:ClassOfService",
          "type": "string",
          "maxLength": 2,
          "minLength": 1,
          "pattern": "([a-zA-Z0-9]{1,2})"
        },
        "cabin": {
          "description": "The cabin",
          "$ref": "#/definitions/CabinAirEnum"
        },
        "fareBasisCode": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "fareType": {
          "description": "Type of fare which has been returned",
          "$ref": "#/definitions/FareTypeEnum"
        },
        "Brand": {
          "description": "Assigned Type: ctbr-0400:Brand",
          "$ref": "#/definitions/BrandID"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "segmentSequence"
      ],
      "discriminator": "@type"
    },
    "FlightSegment": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "sequence": {
          "description": "Assigned Type: ctar-0400:SegmentSequence",
          "type": "integer",
          "format": "int32"
        },
        "connectionDuration": {
          "description": "The actual duration (in minutes) between\\n\\tsegments.",
          "type": "string"
        },
        "Flight": {
          "description": "Assigned Type: ctar-0400:Flight",
          "$ref": "#/definitions/FlightID"
        },
        "boundFlightsInd": {
          "description": "If present and true, the Segments in this Connection must be sold and cancelled together.",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "sequence",
        "connectionDuration",
        "Flight"
      ],
      "discriminator": "@type"
    },
    "FlightID": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internal ID",
          "type": "string"
        },
        "FlightRef": {
          "description": "Reference to a Flight object eslewhere in the message",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Flight": {
      "allOf": [
        {
          "$ref": "#/definitions/FlightID"
        },
        {
          "properties": {
            "distance": {
              "description": "Assigned Type: c-0400:NonnegativeInteger",
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": false
            },
            "stops": {
              "description": "Assigned Type: c-0400:NumberSingleDigit",
              "type": "integer",
              "format": "int32"
            },
            "duration": {
              "description": "Elapsed flight time in minutes",
              "type": "string"
            },
            "carrier": {
              "description": "Assigned Type: c-0400:AirlineCode",
              "type": "string",
              "pattern": "([a-zA-Z0-9]{2,3})"
            },
            "number": {
              "description": "Assigned Type: c-0400:FlightNumber",
              "type": "string",
              "pattern": "[0-9]{1,4}[A-Z]?|OPEN|ARNK"
            },
            "operatingCarrier": {
              "description": "Assigned Type: c-0400:AirlineCode",
              "type": "string",
              "pattern": "([a-zA-Z0-9]{2,3})"
            },
            "operatingCarrierName": {
              "description": "Assigned Type: c-0400:StringShort",
              "type": "string",
              "maxLength": 128
            },
            "equipment": {
              "description": "Assigned Type: c-0400:AirEquipCodeIATA",
              "type": "string",
              "pattern": "([A-Z0-9]{3})?"
            },
            "Departure": {
              "description": "Assigned Type: ctar-0400:Departure",
              "$ref": "#/definitions/Departure"
            },
            "Arrival": {
              "description": "Assigned Type: ctar-0400:Arrival",
              "$ref": "#/definitions/Arrival"
            },
            "IntermediateStop": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IntermediateStop"
              },
              "maxItems": 9
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "carrier",
            "number",
            "operatingCarrierName",
            "Departure",
            "Arrival"
          ]
        }
      ]
    },
    "FromTo": {
      "description": "Location code",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "type": {
          "description": "Airport or City",
          "$ref": "#/definitions/CityOrAirportEnum"
        }
      }
    },
    "IntermediateStop": {
      "description": "An intermediate stop location and duration",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "duration": {
          "description": "Duration stopped at this location",
          "type": "string"
        },
        "equipment": {
          "description": "Assigned Type: c-0400:AirEquipCodeIATA",
          "type": "string",
          "pattern": "([A-Z0-9]{3})?"
        }
      }
    },
    "CabinAirEnum": {
      "description": "Specifies the cabin type (e.g. first, business, economy).",
      "type": "string",
      "enum": [
        "PremiumFirst",
        "First",
        "Business",
        "PremiumEconomy",
        "Economy"
      ]
    },
    "CabinPreferenceTypeEnum": {
      "type": "string",
      "enum": [
        "Preferred",
        "Permitted",
        "PreferredWithUpgrade"
      ]
    },
    "CarrierPreferenceTypeEnum": {
      "type": "string",
      "enum": [
        "Preferred",
        "Permitted",
        "Prohibited"
      ]
    },
    "ConnectionTypeEnum": {
      "type": "string",
      "enum": [
        "NonStopDirect",
        "StopDirect",
        "SingleConnection",
        "DoubleConnection",
        "TripleConnection"
      ]
    },
    "BaggageAllowance": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "passengerTypeCodes": {
          "description": "Assigned Type: c-0400:PassengerTypeCodeList",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 5,
            "minLength": 3,
            "pattern": "([a-zA-Z0-9]{3,5})"
          }
        },
        "baggageType": {
          "description": "The type of baggage that is being limmited.",
          "$ref": "#/definitions/BaggageTypeEnum"
        },
        "ProductRef": {
          "description": "A product is any product, service or package of products and services  that can be priced and purchased by a specific supplier.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "BaggageItem": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaggageItem"
          },
          "maxItems": 10,
          "minItems": 1
        },
        "SegmentSequenceList": {
          "description": "Segment sequence is only to be used when the baggage allowance differs between segments within a product. If so, then the ProducRef must be specified.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "Text": {
          "description": "Text returned from the Airlines with general baggage information.",
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "BaggageItem"
      ],
      "discriminator": "@type"
    },
    "BaggageAllowanceDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/BaggageAllowance"
        },
        {
          "properties": {
            "url": {
              "description": "Url for the airline\u0027s baggage information web site",
              "type": "string"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "BaggageTypeEnum": {
      "type": "string",
      "enum": [
        "CarryOn",
        "FirstCheckedBag",
        "SecondCheckedBag",
        "AdditionalBags",
        "BaggageEmbargo"
      ]
    },
    "ExcludeGroundTypeEnum": {
      "type": "string",
      "enum": [
        "Train",
        "All"
      ]
    },
    "MaxLayoverTypeEnum": {
      "description": "Layover is Domestic",
      "type": "string",
      "enum": [
        "Domestic",
        "International",
        "DomesticToFromInternational"
      ]
    },
    "TravelerGeographicTypeEnum": {
      "type": "string",
      "enum": [
        "Country",
        "StateProvence",
        "City"
      ]
    },
    "DepartureArrival": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "location": {
          "description": "Assigned Type: c-0400:LocationCodeIATA",
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "date": {
          "description": "Local date of for arrival or departure",
          "type": "string",
          "format": "date"
        },
        "time": {
          "description": "Local time Date of for arrival or departure",
          "type": "string"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "location",
        "date",
        "time"
      ],
      "discriminator": "@type"
    },
    "Arrival": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "location": {
          "description": "Assigned Type: c-0400:LocationCodeIATA",
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "date": {
          "description": "Local date of for arrival or departure",
          "type": "string",
          "format": "date"
        },
        "time": {
          "description": "Local time Date of for arrival or departure",
          "type": "string"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "location",
        "date",
        "time"
      ],
      "discriminator": "@type"
    },
    "Departure": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "location": {
          "description": "Assigned Type: c-0400:LocationCodeIATA",
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "date": {
          "description": "Local date of for arrival or departure",
          "type": "string",
          "format": "date"
        },
        "time": {
          "description": "Local time Date of for arrival or departure",
          "type": "string"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "location",
        "date",
        "time"
      ],
      "discriminator": "@type"
    },
    "DepartureArrivalDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/DepartureArrival"
        },
        {
          "properties": {
            "terminal": {
              "description": "Assigned Type: c-0400:StringAlphaNumeric",
              "type": "string",
              "maxLength": 4096,
              "pattern": "([0-9a-zA-Z]+)?"
            },
            "country": {
              "description": "Assigned Type: c-0400:CountryCodeISO",
              "type": "string",
              "pattern": "[a-zA-Z]{2}"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "ArrivalDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Arrival"
        },
        {
          "properties": {
            "terminal": {
              "description": "Assigned Type: c-0400:StringAlphaNumeric",
              "type": "string",
              "maxLength": 4096,
              "pattern": "([0-9a-zA-Z]+)?"
            },
            "country": {
              "description": "Assigned Type: c-0400:CountryCodeISO",
              "type": "string",
              "pattern": "[a-zA-Z]{2}"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "DepartureDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/Departure"
        },
        {
          "properties": {
            "terminal": {
              "description": "Assigned Type: c-0400:StringAlphaNumeric",
              "type": "string",
              "maxLength": 4096,
              "pattern": "([0-9a-zA-Z]+)?"
            },
            "country": {
              "description": "Assigned Type: c-0400:CountryCodeISO",
              "type": "string",
              "pattern": "[a-zA-Z]{2}"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "PassengerCriteria": {
      "description": "Passenger Type Code",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 5,
          "minLength": 3,
          "pattern": "([a-zA-Z0-9]{3,5})"
        },
        "number": {
          "description": "Assigned Type: c-0400:NonnegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "age": {
          "description": "Assigned Type: c-0400:NumberDoubleDigit",
          "type": "integer",
          "format": "int32"
        },
        "travelerGeographicLocation": {
          "description": "Assigned Type: ctar-0400:TravelerGeographicLocation",
          "type": "string",
          "maxLength": 32
        },
        "customerLoyalty": {
          "description": "Assigned Type: c-0400:CustomerLoyalty",
          "type": "string",
          "maxLength": 1000,
          "minLength": 1
        },
        "travelerGeographicLocationType": {
          "description": "The geographic location type.  For example (Country)",
          "$ref": "#/definitions/TravelerGeographicTypeEnum"
        },
        "id": {
          "description": "Customer Loyality Id",
          "type": "string"
        },
        "priority": {
          "description": "Assigned Type: c-0400:Priority",
          "type": "integer",
          "format": "int32",
          "maximum": 300,
          "exclusiveMaximum": false,
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "programId": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "programName": {
          "description": "Assigned Type: c-0400:LoyaltyProgramName",
          "type": "string",
          "maxLength": 128
        },
        "supplierType": {
          "description": "Assigned Type: c-0400:LoyaltySupplierType",
          "type": "string",
          "maxLength": 32
        },
        "supplier": {
          "description": "Assigned Type: c-0400:LoyaltySupplier",
          "type": "string",
          "maxLength": 128
        },
        "tier": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "shareWithSupplier": {
          "description": "Assigned Type: c-0400:TinyStrings",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 32
          }
        },
        "cardHolderName": {
          "description": "Assigned Type: c-0400:StringShort",
          "type": "string",
          "maxLength": 128
        },
        "specifiedPassengerTypeCodeOnlyInd": {
          "description": "If true then the Offering\\/Offer will only be returned for the specific passengerTypeCode",
          "type": "boolean"
        },
        "validatedInd": {
          "description": "Customer loyalty number has been validated by the supplier",
          "type": "boolean"
        }
      },
      "required": [
        "number"
      ]
    },
    "PricingModifiersAir": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "currencyCode": {
          "description": "Assigned Type: c-0400:CurrencyCodeISO",
          "type": "string",
          "pattern": "[a-zA-Z]{3}"
        },
        "FareSelection": {
          "description": "Assigned Type: ctar-0400:FareSelection",
          "$ref": "#/definitions/FareSelection"
        },
        "OrganizationIdentifier": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrganizationIdentifier"
          },
          "maxItems": 10,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "OrganizationIdentifier"
      ],
      "discriminator": "@type"
    },
    "PricingModifiersAirDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/PricingModifiersAir"
        },
        {
          "properties": {
            "Brand": {
              "description": "Assigned Type: ctbr-0400:Brand",
              "$ref": "#/definitions/BrandID"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          }
        }
      ]
    },
    "SearchCriteriaFlight": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "departureDate": {
          "description": "Departure date",
          "type": "string",
          "format": "date"
        },
        "departureTime": {
          "description": "Detarture time",
          "type": "string"
        },
        "legSequence": {
          "description": "Assigned Type: ctar-0400:SegmentSequence",
          "type": "integer",
          "format": "int32"
        },
        "From": {
          "description": "Assigned Type: ctar-0400:FromTo",
          "$ref": "#/definitions/FromTo"
        },
        "To": {
          "description": "Assigned Type: ctar-0400:FromTo",
          "$ref": "#/definitions/FromTo"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "departureDate",
        "From",
        "To"
      ],
      "discriminator": "@type"
    },
    "SearchModifiersAir": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "excludeGround": {
          "description": "A type of ground transportation that is to be excluded for the response",
          "$ref": "#/definitions/ExcludeGroundTypeEnum"
        },
        "FlightType": {
          "description": "Assigned Type: ctar-0400:FlightType",
          "$ref": "#/definitions/FlightType"
        },
        "CarrierPreference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CarrierPreference"
          },
          "maxItems": 20
        },
        "CabinPreference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CabinPreference"
          },
          "maxItems": 20
        },
        "MaxLayover": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaxLayover"
          },
          "maxItems": 3
        },
        "MaxConnectionDuration": {
          "description": "Do not include connections over this duration in the response",
          "type": "string"
        },
        "MaxOvernightDuration": {
          "description": "Do not include overnight connections over this duration in the response",
          "type": "string"
        },
        "prohibitChangeOfAirportInd": {
          "description": "If present and true, connections that require a change of airports are not returned",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CabinPreference": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "type": {
          "description": "Preference type.  i.e. Permitted",
          "$ref": "#/definitions/CabinPreferenceTypeEnum"
        },
        "cabins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CabinAirEnum"
          }
        },
        "legSequence": {
          "description": "Assigned Type: ctar-0400:SegmentSequenceList",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "CarrierPreference": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "type": {
          "description": "Preference type. i.e Permitted",
          "$ref": "#/definitions/CarrierPreferenceTypeEnum"
        },
        "carriers": {
          "description": "Assigned Type: c-0400:AirlineCodes",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "([a-zA-Z0-9]{2,3})"
          }
        },
        "legSequence": {
          "description": "Assigned Type: ctar-0400:SegmentSequenceList",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "type",
        "carriers"
      ],
      "discriminator": "@type"
    },
    "FareSelection": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "fareType": {
          "description": "Indicates whether only public fares\\n                        should be returned or specific type of private fares",
          "$ref": "#/definitions/FaresFilterEnum"
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FareSelectionDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/FareSelection"
        },
        {
          "properties": {
            "validatingCarrier": {
              "description": "Assigned Type: c-0400:AirlineCode",
              "type": "string",
              "pattern": "([a-zA-Z0-9]{2,3})"
            },
            "overrideCarrier": {
              "description": "Assigned Type: c-0400:AirlineCode",
              "type": "string",
              "pattern": "([a-zA-Z0-9]{2,3})"
            },
            "prohibitMinStayFaresInd": {
              "description": "If present and true, fares with minimum stays will not be returned",
              "type": "boolean"
            },
            "prohibitMaxStayFaresInd": {
              "description": "If present and true, fares with maximum stays will not be returned",
              "type": "boolean"
            },
            "refundableOnlyInd": {
              "description": "If present and true, only refundable fares will be returned",
              "type": "boolean"
            },
            "prohibitAdvancePurchaseFaresInd": {
              "description": "If present and true, fares with advance purchase requirements will not be returned",
              "type": "boolean"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "validatingCarrier",
            "overrideCarrier"
          ]
        }
      ]
    },
    "FlightType": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "connectionType": {
          "description": "Describes if the flight type is nonstop, direct, single connection, etc.",
          "$ref": "#/definitions/ConnectionTypeEnum"
        },
        "excludeInterlineConnectionsInd": {
          "description": "If present and true, exclude interline connections",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "MaxLayover": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "type": {
          "description": "Type of Layover",
          "$ref": "#/definitions/MaxLayoverTypeEnum"
        },
        "duration": {
          "description": "Maximum duration for this layover type",
          "type": "string"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "type",
        "duration"
      ],
      "discriminator": "@type"
    },
    "TravelerGeographicLocation": {
      "description": "A counrty, provence\\/state or city code",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "travelerGeographicLocationType": {
          "description": "The geographic location type.  For example (Country)",
          "$ref": "#/definitions/TravelerGeographicTypeEnum"
        }
      }
    },
    "SpecificFlightCriteria": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "carrier": {
          "description": "Assigned Type: c-0400:AirlineCode",
          "type": "string",
          "pattern": "([a-zA-Z0-9]{2,3})"
        },
        "flightNumber": {
          "description": "Assigned Type: c-0400:FlightNumber",
          "type": "string",
          "pattern": "[0-9]{1,4}[A-Z]?|OPEN|ARNK"
        },
        "departureDate": {
          "description": "date of departure",
          "type": "string",
          "format": "date"
        },
        "departureTime": {
          "description": "Assigned Type: ota2:LocalTime",
          "type": "string",
          "pattern": "(([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)((:?)[0-5]\\d)?([\\.,]\\d+(?!:))?"
        },
        "arrivalDate": {
          "description": "Assigned Type: ota2:LocalDate",
          "type": "string",
          "pattern": "(\\d{4}-\\d{2}-\\d{2})"
        },
        "arrivalTime": {
          "description": "Assigned Type: ota2:LocalTime",
          "type": "string",
          "pattern": "(([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)((:?)[0-5]\\d)?([\\.,]\\d+(?!:))?"
        },
        "from": {
          "description": "Assigned Type: c-0400:AirportCodeIATA",
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "to": {
          "description": "Assigned Type: c-0400:AirportCodeIATA",
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "pattern": "([a-zA-Z]{3})"
        },
        "cabin": {
          "description": "Cabin",
          "$ref": "#/definitions/CabinAirEnum"
        },
        "classOfService": {
          "description": "Assigned Type: c-0400:ClassOfService",
          "type": "string",
          "maxLength": 2,
          "minLength": 1,
          "pattern": "([a-zA-Z0-9]{1,2})"
        },
        "brandTier": {
          "description": "Assigned Type: c-0400:NumberSingleDigit",
          "type": "integer",
          "format": "int32"
        },
        "segmentSequence": {
          "description": "Assigned Type: ctar-0400:SegmentSequence",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "@type",
        "carrier",
        "flightNumber",
        "departureDate",
        "from",
        "to",
        "segmentSequence"
      ],
      "discriminator": "@type"
    },
    "ProductCriteriaAir": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "sequence": {
          "description": "Assigned Type: c-0400:NonnegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "SpecificFlightCriteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecificFlightCriteria"
          },
          "maxItems": 20,
          "minItems": 1
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "sequence",
        "SpecificFlightCriteria"
      ],
      "discriminator": "@type"
    },
    "BaggageItem": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "quantity": {
          "description": "Assigned Type: c-0400:NumberSingleDigit",
          "type": "integer",
          "format": "int32"
        },
        "Measurement": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measurement"
          },
          "maxItems": 6
        },
        "BaggageFee": {
          "description": "Assigned Type: c-0400:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "Text": {
          "description": "Text returned from the shop response",
          "type": "string",
          "maxLength": 128
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "SearchCriteriaFlightChange": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "sequence": {
          "description": "Assigned Type: c-0400:NonnegativeInteger",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "departureDate": {
          "description": "Assigned Type: ota2:LocalDate",
          "type": "string",
          "pattern": "(\\d{4}-\\d{2}-\\d{2})"
        },
        "departureTime": {
          "description": "Assigned Type: ota2:LocalTime",
          "type": "string",
          "pattern": "(([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)((:?)[0-5]\\d)?([\\.,]\\d+(?!:))?"
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type",
        "departureDate"
      ],
      "discriminator": "@type"
    },
    "SearchCriteriaFlightChangeByLocation": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchCriteriaFlightChange"
        },
        {
          "properties": {
            "From": {
              "description": "Assigned Type: ctar-0400:FromTo",
              "$ref": "#/definitions/FromTo"
            },
            "To": {
              "description": "Assigned Type: ctar-0400:FromTo",
              "$ref": "#/definitions/FromTo"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "From",
            "To"
          ]
        }
      ]
    },
    "SearchCriteriaFlightChangeSpecific": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchCriteriaFlightChange"
        },
        {
          "properties": {
            "carrier": {
              "description": "Assigned Type: c-0400:AirlineCode",
              "type": "string",
              "pattern": "([a-zA-Z0-9]{2,3})"
            },
            "flightNumber": {
              "description": "Assigned Type: c-0400:FlightNumber",
              "type": "string",
              "pattern": "[0-9]{1,4}[A-Z]?|OPEN|ARNK"
            },
            "arrivalDate": {
              "description": "Assigned Type: ota2:LocalDate",
              "type": "string",
              "pattern": "(\\d{4}-\\d{2}-\\d{2})"
            },
            "arrivalTime": {
              "description": "Assigned Type: ota2:LocalTime",
              "type": "string",
              "pattern": "(([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)((:?)[0-5]\\d)?([\\.,]\\d+(?!:))?"
            },
            "from": {
              "description": "Assigned Type: c-0400:AirportCodeIATA",
              "type": "string",
              "maxLength": 3,
              "minLength": 3,
              "pattern": "([a-zA-Z]{3})"
            },
            "to": {
              "description": "Assigned Type: c-0400:AirportCodeIATA",
              "type": "string",
              "maxLength": 3,
              "minLength": 3,
              "pattern": "([a-zA-Z]{3})"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "carrier",
            "flightNumber",
            "from",
            "to"
          ]
        }
      ]
    },
    "FareRuleText": {
      "description": "Text describing this fare rule",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 4096
        },
        "name": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        }
      }
    },
    "FareRuleCategoryEnum": {
      "type": "string",
      "enum": [
        "AdvanceReservations/Ticketing",
        "MinimumStay",
        "MaximumStay",
        "Stopovers",
        "Penalties"
      ]
    },
    "Change": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "penaltyTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PenaltyTypeEnum"
          }
        },
        "Amount": {
          "description": "Assigned Type: c-0400:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "PenaltyAppliesTo": {
          "description": "Assigned Type: ctar-0400:PenaltyAppliesToEnum",
          "$ref": "#/definitions/PenaltyAppliesToEnum"
        },
        "notPermittedInd": {
          "description": "Changes are not permitted",
          "type": "boolean"
        },
        "indeterminateInd": {
          "description": "structured fare rules could not be determined for this category",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Refund": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "penaltyTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PenaltyTypeEnum"
          }
        },
        "Amount": {
          "description": "Assigned Type: c-0400:CurrencyAmount",
          "$ref": "#/definitions/CurrencyAmount"
        },
        "PenaltyAppliesTo": {
          "description": "Assigned Type: ctar-0400:PenaltyAppliesToEnum",
          "$ref": "#/definitions/PenaltyAppliesToEnum"
        },
        "notPermittedInd": {
          "description": "Changes are not permitted",
          "type": "boolean"
        },
        "indeterminateInd": {
          "description": "structured fare rules could not be determined for this category",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "PenaltyTypeEnum": {
      "type": "string",
      "enum": [
        "BeforeDeparture",
        "AfterDeparture",
        "Anytime",
        "NoShow",
        "Minimum",
        "Maximum",
        "ExchangeRequired",
        "ExchangeNotRequired"
      ]
    },
    "Penalties": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "passengerTypeCodes": {
          "description": "Assigned Type: c-0400:PassengerTypeCodeList",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 5,
            "minLength": 3,
            "pattern": "([a-zA-Z0-9]{3,5})"
          }
        },
        "Change": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Change"
          },
          "maxItems": 10
        },
        "Refund": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Refund"
          },
          "maxItems": 10
        },
        "Waiver": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WaiverEnum"
          },
          "maxItems": 10
        },
        "involuntaryInd": {
          "description": "Penalties apply for involuntary changes initiated by the airline",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FareRuleInfo": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "flightRefs": {
          "description": "The flight segment IDs to which this fare rule applies",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ruleNumber": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "tariffNumber": {
          "description": "Assigned Type: c-0400:StringTiny",
          "type": "string",
          "maxLength": 32
        },
        "ExtensionPoint_Shared": {
          "$ref": "#/definitions/ExtensionPoint_Shared"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "FareRuleInfoText": {
      "allOf": [
        {
          "$ref": "#/definitions/FareRuleInfo"
        },
        {
          "properties": {
            "FareRuleText": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FareRuleText"
              },
              "maxItems": 100,
              "minItems": 1
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "FareRuleText"
          ]
        }
      ]
    },
    "FareRuleInfoStructured": {
      "allOf": [
        {
          "$ref": "#/definitions/FareRuleInfo"
        },
        {
          "properties": {
            "Penalties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Penalties"
              },
              "maxItems": 10
            },
            "MinimumStay": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MinimumStay"
              },
              "maxItems": 10
            },
            "MaximumStay": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MaximumStay"
              },
              "maxItems": 10
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "MinimumStay": {
      "description": "Minimum Stay",
      "properties": {
        "value": {
          "type": "string"
        },
        "passengerTypeCodes": {
          "description": "Assigned Type: c-0400:PassengerTypeCodeList",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 5,
            "minLength": 3,
            "pattern": "([a-zA-Z0-9]{3,5})"
          }
        },
        "mustIncludeDayOfWeek": {
          "description": "This day of the week must be included as part of the minimum stay",
          "$ref": "#/definitions/DayOfWeekEnum"
        },
        "originDayOfWeek": {
          "description": "The rule applies to trips commencing on a specific day of a week",
          "$ref": "#/definitions/DayOfWeekEnum"
        },
        "returnTime": {
          "description": "Assigned Type: ota2:LocalTime",
          "type": "string",
          "pattern": "(([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)((:?)[0-5]\\d)?([\\.,]\\d+(?!:))?"
        },
        "indeterminateInd": {
          "description": "Structured fare rules could not be determined for this category",
          "type": "boolean"
        }
      }
    },
    "WaiverEnum": {
      "description": "Type of Waiver like Death of Pessanger,illness Of Passenger, Death of Immediate Family Member  etc",
      "type": "string",
      "enum": [
        "DeathOfPassenger",
        "IllnessOfPassenger",
        "DeathOfImmediateFamilyMember",
        "IllnessOfImmediateFamilyMember",
        "TicketUpgrade",
        "ScheduleChange"
      ]
    },
    "PenaltyAppliesToEnum": {
      "description": "Penalty applicable list",
      "type": "string",
      "enum": [
        "OneWay",
        "RoundTrip",
        "PerTicket",
        "PerCoupon",
        "PerDirectionOfTravel"
      ]
    },
    "MaximumStay": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "passengerTypeCodes": {
          "description": "Assigned Type: c-0400:PassengerTypeCodeList",
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 5,
            "minLength": 3,
            "pattern": "([a-zA-Z0-9]{3,5})"
          }
        },
        "maximumStayDuration": {
          "type": "string"
        },
        "maximumStayDate": {
          "type": "string",
          "format": "date"
        },
        "returnTime": {
          "description": "Assigned Type: ota2:LocalTime",
          "type": "string",
          "pattern": "(([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)((:?)[0-5]\\d)?([\\.,]\\d+(?!:))?"
        },
        "RuleApplies": {
          "description": "Assigned Type: ctar-0400:RuleAppliesEnum",
          "$ref": "#/definitions/RuleAppliesEnum"
        },
        "indeterminateInd": {
          "description": "Structured fare rules could not be determined for this category",
          "type": "boolean"
        },
        "mustCommenceByInd": {
          "description": "Indicates if travel must commence by this date\\/duration",
          "type": "boolean"
        },
        "mustCompleteByInd": {
          "description": "Indicates if travel must complete by this date\\/duration",
          "type": "boolean"
        },
        "fromDateOfIssueInd": {
          "description": "If true the Maximum stay is calculated from the date of ticket issuance",
          "type": "boolean"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "RuleAppliesEnum": {
      "description": "Used when multiple maximumStayDuration and maximumStayDate are given and you must indicate which one applies. (max stay is 1 year or 15thDecember, the later of the two)",
      "type": "string",
      "enum": [
        "EarliestApplies",
        "LaterApplies"
      ]
    },
    "OrganizationIdentifier": {
      "description": "The organization identifier",
      "properties": {
        "value": {
          "type": "string",
          "maxLength": 32
        },
        "supplier": {
          "description": "Assigned Type: c-0400:AirlineCode",
          "type": "string",
          "pattern": "([a-zA-Z0-9]{2,3})"
        },
        "type": {
          "description": "The type od code.  Organization or account",
          "$ref": "#/definitions/OrganizationCodeTypeEnum"
        }
      }
    },
    "OrganizationCodeTypeEnum": {
      "type": "string",
      "enum": [
        "Account",
        "Organization"
      ]
    },
    "ContentSourceEnum": {
      "description": "The source of the content to be returned in CatalogOfferings",
      "type": "string",
      "enum": [
        "GDS",
        "NDC"
      ]
    },
    "ReferenceListBrand": {
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "Brand": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrandID"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "BrandID": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "BrandRef": {
          "description": "Used to reference another instance of this object in the same message",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "Brand": {
      "allOf": [
        {
          "$ref": "#/definitions/BrandID"
        },
        {
          "properties": {
            "name": {
              "description": "Assigned Type: ctbr-0400:BrandName",
              "type": "string",
              "maxLength": 128
            },
            "tier": {
              "description": "Assigned Type: c-0400:NumberSingleDigit",
              "type": "integer",
              "format": "int32"
            },
            "BrandAttribute": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrandAttribute"
              },
              "maxItems": 7,
              "minItems": 1
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          },
          "required": [
            "name",
            "BrandAttribute"
          ]
        }
      ]
    },
    "BrandAttribute": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "classification": {
          "description": "The Travelport classification used for a category of ancillaries such as Seat, Bags, etc. This is an initial list that will be added to.",
          "$ref": "#/definitions/BrandClassificationEnum"
        },
        "inclusion": {
          "description": "whether this attribute is included, chargeable, etc.",
          "$ref": "#/definitions/BrandInclusionEnum"
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "classification",
        "inclusion"
      ],
      "discriminator": "@type"
    },
    "BrandFullInfoID": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Local indentifier within a given message for this object.",
          "type": "string"
        },
        "BrandFullInfoRef": {
          "description": "Used to reference another instance of this object in the same message",
          "type": "string"
        },
        "Identifier": {
          "description": "Assigned Type: c-0400:Identifier",
          "$ref": "#/definitions/Identifier"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BrandFullInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/BrandFullInfoID"
        },
        {
          "properties": {
            "BrandInfo": {
              "description": "Assigned Type: ctbr-0400:BrandInfo",
              "$ref": "#/definitions/BrandInfo"
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "BrandFullInfoQueryMerchandising": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "MerchandisingID": {
          "description": "Merchandising ID",
          "type": "string",
          "maxLength": 512
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type"
      ],
      "discriminator": "@type"
    },
    "BrandInfo": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ctbr-0400:BrandName",
          "type": "string",
          "maxLength": 128
        },
        "inclusion": {
          "description": "The indicator as to hoe the brand and the product are associated.",
          "$ref": "#/definitions/BrandInclusionEnum"
        },
        "BrandText": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandText"
          },
          "maxItems": 10
        },
        "AttributeInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeInfo"
          },
          "maxItems": 25
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "name",
        "inclusion"
      ],
      "discriminator": "@type"
    },
    "AttributeInfo": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "name": {
          "description": "Assigned Type: ctbr-0400:BrandName",
          "type": "string",
          "maxLength": 128
        },
        "inclusion": {
          "description": "The indicator as to hoe the brand and the product are associated.",
          "$ref": "#/definitions/BrandInclusionEnum"
        },
        "BrandText": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BrandText"
          },
          "maxItems": 10
        },
        "AttributeInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributeInfo"
          },
          "maxItems": 25
        },
        "ExtensionPoint": {
          "$ref": "#/definitions/ExtensionPoint"
        }
      },
      "required": [
        "@type",
        "name",
        "inclusion"
      ],
      "discriminator": "@type"
    },
    "AncillaryBrandText": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "target": {
          "description": "The audience targeted for the brand information",
          "$ref": "#/definitions/BrandTargetEnum"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "FareBrandText": {
      "properties": {
        "@type": {
          "type": "string"
        },
        "id": {
          "description": "Internally referenced id",
          "type": "string"
        },
        "target": {
          "description": "The audience targeted for the brand information",
          "$ref": "#/definitions/BrandTargetEnum"
        },
        "TextFormatted": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextFormatted"
          },
          "maxItems": 50,
          "minItems": 1
        },
        "ExtensionPoint_Summary": {
          "$ref": "#/definitions/ExtensionPoint_Summary"
        }
      },
      "required": [
        "@type",
        "TextFormatted"
      ],
      "discriminator": "@type"
    },
    "AncillaryBrandTextDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/AncillaryBrandText"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "FareBrandTextDetail": {
      "allOf": [
        {
          "$ref": "#/definitions/FareBrandText"
        },
        {
          "properties": {
            "sequence": {
              "description": "The order of the text block, if there are more than one block.",
              "type": "integer",
              "format": "int32"
            },
            "description": {
              "description": "Assigned Type: c-0400:Description",
              "type": "string",
              "maxLength": 1024
            },
            "Image": {
              "description": "Assigned Type: c-0400:Image",
              "$ref": "#/definitions/Image"
            },
            "URL": {
              "description": "A URL for this block",
              "type": "string"
            },
            "DateCreateModify": {
              "description": "Assigned Type: c-0400:DateCreateModify",
              "$ref": "#/definitions/DateCreateModify"
            },
            "ExtensionPoint_Detail": {
              "$ref": "#/definitions/ExtensionPoint_Detail"
            }
          },
          "required": [
            "DateCreateModify"
          ]
        }
      ]
    },
    "BrandInclusionEnum": {
      "description": "The indicator as to hoe the brand and the product are associated.",
      "type": "string",
      "enum": [
        "Included",
        "Chargeable",
        "Not Offered"
      ]
    },
    "BrandTargetEnum": {
      "description": "The audience targeted for the brand information",
      "type": "string",
      "enum": [
        "Strapline",
        "MarketingAgent",
        "MarketingConsumer",
        "External",
        "Short",
        "Agent",
        "Consumer",
        "Upsell"
      ]
    },
    "BrandClassificationEnum": {
      "description": "The Travelport classification used for a category of ancillaries such as Seat, Bags, etc. This is an initial list that will be added to.",
      "type": "string",
      "enum": [
        "CheckedBag",
        "CarryOn",
        "Rebooking",
        "Refund",
        "Seats",
        "Meals",
        "WiFi"
      ]
    },
    "ReferenceListBrandFullInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/ReferenceList"
        },
        {
          "properties": {
            "BrandFullInfo": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BrandFullInfoID"
              }
            },
            "ExtensionPoint": {
              "$ref": "#/definitions/ExtensionPoint"
            }
          }
        }
      ]
    },
    "ExtensionPoint": {},
    "ExtensionPoint_Summary": {},
    "ExtensionPoint_Detail": {},
    "ExtensionPoint_Custom": {},
    "ExtensionPoint_Query": {},
    "ExtensionPoint_Update": {},
    "ExtensionPoint_Shared": {},
    "ExtensionPoint_Choice": {}
  },
  "parameters": {
    "E2ETrackingId": {
      "name": "E2ETrackingId",
      "in": "header",
      "description": "Identifier used to correlate API invocations with operations across all affected Travelport systems.",
      "required": false,
      "type": "string"
    },
    "XAUTH_TRAVELPORT_ACCESSGROUP": {
      "name": "XAUTH_TRAVELPORT_ACCESSGROUP",
      "in": "header",
      "description": "Identifies the Travelport access group with which the caller is associated",
      "required": false,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "BasicAuthSceme": {
      "type": "basic"
    }
  },
  "security": [
    {
      "BasicAuthSceme": []
    }
  ]
}